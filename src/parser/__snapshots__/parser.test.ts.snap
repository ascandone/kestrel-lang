// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`+ is left-associative 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 17,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "left": {
          "left": {
            "range": {
              "end": {
                "character": 9,
                "line": 0,
              },
              "start": {
                "character": 8,
                "line": 0,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 1,
            },
          },
          "operator": "+",
          "range": {
            "end": {
              "character": 13,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "right": {
            "range": {
              "end": {
                "character": 13,
                "line": 0,
              },
              "start": {
                "character": 12,
                "line": 0,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 2,
            },
          },
          "type": "infix",
        },
        "operator": "+",
        "range": {
          "end": {
            "character": 17,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "right": {
          "range": {
            "end": {
              "character": 17,
              "line": 0,
            },
            "start": {
              "character": 16,
              "line": 0,
            },
          },
          "type": "constant",
          "value": {
            "type": "int",
            "value": 3,
          },
        },
        "type": "infix",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`Comments > doc comments 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 9,
            "line": 3,
          },
          "start": {
            "character": 8,
            "line": 3,
          },
        },
      },
      "docComment": " first line
 second line
",
      "pub": false,
      "range": {
        "end": {
          "character": 13,
          "line": 3,
        },
        "start": {
          "character": 4,
          "line": 1,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 13,
            "line": 3,
          },
          "start": {
            "character": 12,
            "line": 3,
          },
        },
        "type": "constant",
        "value": {
          "type": "int",
          "value": 0,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`Comments > doc comments on extern types 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "docComment": " first line
 second line
",
      "name": "X",
      "params": [],
      "pub": false,
      "range": {
        "end": {
          "character": 17,
          "line": 3,
        },
        "start": {
          "character": 4,
          "line": 1,
        },
      },
      "type": "extern",
    },
  ],
}
`;

exports[`Comments > doc comments on externs 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "polytype": {
            "mono": {
              "args": [],
              "name": "X",
              "range": {
                "end": {
                  "character": 11,
                  "line": 3,
                },
                "start": {
                  "character": 10,
                  "line": 3,
                },
              },
              "type": "named",
            },
            "range": {
              "end": {
                "character": 11,
                "line": 3,
              },
              "start": {
                "character": 10,
                "line": 3,
              },
            },
            "where": [],
          },
          "range": {
            "end": {
              "character": 11,
              "line": 3,
            },
            "start": {
              "character": 4,
              "line": 3,
            },
          },
          "type": "@type",
        },
        {
          "range": {
            "end": {
              "character": 11,
              "line": 4,
            },
            "start": {
              "character": 4,
              "line": 4,
            },
          },
          "type": "@extern",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 9,
            "line": 5,
          },
          "start": {
            "character": 8,
            "line": 5,
          },
        },
      },
      "docComment": " first line
 second line
",
      "pub": false,
      "range": {
        "end": {
          "character": 9,
          "line": 5,
        },
        "start": {
          "character": 4,
          "line": 1,
        },
      },
      "value": undefined,
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`Comments > doc comments on types 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "docComment": " first line
 second line
",
      "name": "X",
      "params": [],
      "pub": false,
      "range": {
        "end": {
          "character": 13,
          "line": 3,
        },
        "start": {
          "character": 4,
          "line": 1,
        },
      },
      "type": "adt",
      "variants": [],
    },
  ],
}
`;

exports[`Comments > doc comments with many declrs 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 9,
            "line": 1,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 13,
          "line": 1,
        },
        "start": {
          "character": 4,
          "line": 1,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 13,
            "line": 1,
          },
          "start": {
            "character": 12,
            "line": 1,
          },
        },
        "type": "constant",
        "value": {
          "type": "int",
          "value": 0,
        },
      },
    },
    {
      "attributes": [],
      "binding": {
        "name": "y",
        "range": {
          "end": {
            "character": 13,
            "line": 4,
          },
          "start": {
            "character": 12,
            "line": 4,
          },
        },
      },
      "docComment": " comment
",
      "pub": true,
      "range": {
        "end": {
          "character": 17,
          "line": 4,
        },
        "start": {
          "character": 4,
          "line": 3,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 17,
            "line": 4,
          },
          "start": {
            "character": 16,
            "line": 4,
          },
        },
        "type": "constant",
        "value": {
          "type": "int",
          "value": 1,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`Comments > moduledoc comments 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 9,
            "line": 3,
          },
          "start": {
            "character": 8,
            "line": 3,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 13,
          "line": 3,
        },
        "start": {
          "character": 4,
          "line": 3,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 13,
            "line": 3,
          },
          "start": {
            "character": 12,
            "line": 3,
          },
        },
        "type": "constant",
        "value": {
          "type": "int",
          "value": 0,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "moduleDoc": " Module level comment
 Second line
",
  "typeDeclarations": [],
}
`;

exports[`Decorators > inline decorator 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "range": {
            "end": {
              "character": 7,
              "line": 0,
            },
            "start": {
              "character": 0,
              "line": 0,
            },
          },
          "type": "@inline",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 17,
            "line": 0,
          },
          "start": {
            "character": 16,
            "line": 0,
          },
        },
      },
      "pub": true,
      "range": {
        "end": {
          "character": 21,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 21,
            "line": 0,
          },
          "start": {
            "character": 20,
            "line": 0,
          },
        },
        "type": "constant",
        "value": {
          "type": "int",
          "value": 0,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`Fault tolerance > dot notation in struct 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 12,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "field": {
          "name": "",
          "range": {
            "end": {
              "character": 12,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "structName": undefined,
        },
        "range": {
          "end": {
            "character": 12,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "struct": {
          "name": "str",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 11,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "type": "field-access",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`Fault tolerance > faulty decl 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 11,
            "line": 2,
          },
          "start": {
            "character": 10,
            "line": 2,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 16,
          "line": 2,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 16,
            "line": 2,
          },
          "start": {
            "character": 14,
            "line": 2,
          },
        },
        "type": "constant",
        "value": {
          "type": "int",
          "value": 42,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`Fault tolerance > faulty infix 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 11,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "left": {
          "range": {
            "end": {
              "character": 9,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "constant",
          "value": {
            "type": "int",
            "value": 1,
          },
        },
        "operator": "+",
        "range": {
          "end": {
            "character": 11,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "right": {
          "range": {
            "end": {
              "character": 11,
              "line": 0,
            },
            "start": {
              "character": 11,
              "line": 0,
            },
          },
          "type": "syntax-err",
        },
        "type": "infix",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`Fault tolerance > missing expr 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 7,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 10,
            "line": 0,
          },
          "start": {
            "character": 7,
            "line": 0,
          },
        },
        "type": "syntax-err",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`Fault tolerance > missing string lit termination 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 7,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 9,
            "line": 0,
          },
          "start": {
            "character": 7,
            "line": 0,
          },
        },
        "type": "syntax-err",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`extern bindings > let decls 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "polytype": {
            "mono": {
              "args": [],
              "name": "Int",
              "range": {
                "end": {
                  "character": 15,
                  "line": 1,
                },
                "start": {
                  "character": 12,
                  "line": 1,
                },
              },
              "type": "named",
            },
            "range": {
              "end": {
                "character": 15,
                "line": 1,
              },
              "start": {
                "character": 12,
                "line": 1,
              },
            },
            "where": [],
          },
          "range": {
            "end": {
              "character": 15,
              "line": 1,
            },
            "start": {
              "character": 6,
              "line": 1,
            },
          },
          "type": "@type",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 11,
            "line": 2,
          },
          "start": {
            "character": 10,
            "line": 2,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 11,
          "line": 2,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": undefined,
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`extern bindings > let decls defining infix operators 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "range": {
            "end": {
              "character": 13,
              "line": 1,
            },
            "start": {
              "character": 6,
              "line": 1,
            },
          },
          "type": "@extern",
        },
      ],
      "binding": {
        "name": ">=>",
        "range": {
          "end": {
            "character": 15,
            "line": 2,
          },
          "start": {
            "character": 10,
            "line": 2,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 15,
          "line": 2,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": undefined,
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`extern bindings > types 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "name": "T",
      "params": [],
      "pub": false,
      "range": {
        "end": {
          "character": 19,
          "line": 1,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "type": "extern",
    },
  ],
}
`;

exports[`ignoring comments 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 9,
            "line": 2,
          },
          "start": {
            "character": 8,
            "line": 2,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 14,
          "line": 2,
        },
        "start": {
          "character": 4,
          "line": 2,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 14,
            "line": 2,
          },
          "start": {
            "character": 12,
            "line": 2,
          },
        },
        "type": "constant",
        "value": {
          "type": "int",
          "value": 42,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [
    {
      "comment": "// ignoring comments",
      "range": {
        "end": {
          "character": 24,
          "line": 1,
        },
        "start": {
          "character": 4,
          "line": 1,
        },
      },
    },
  ],
  "typeDeclarations": [],
}
`;

exports[`imports > identifiers can be qualified 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 16,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "name": "name",
        "namespace": "A/B",
        "range": {
          "end": {
            "character": 16,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "identifier",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`imports > import nested modules 1`] = `
{
  "declarations": [],
  "imports": [
    {
      "exposing": [],
      "ns": "A/B/C",
      "range": {
        "end": {
          "character": 12,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
    },
  ],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`imports > import single module 1`] = `
{
  "declarations": [],
  "imports": [
    {
      "exposing": [],
      "ns": "A",
      "range": {
        "end": {
          "character": 8,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
    },
  ],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`imports > parse pub modifier 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 9,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
      },
      "pub": true,
      "range": {
        "end": {
          "character": 16,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 16,
            "line": 0,
          },
          "start": {
            "character": 12,
            "line": 0,
          },
        },
        "type": "constant",
        "value": {
          "type": "float",
          "value": 1.23,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`imports > parse pub modifier on extern types 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "name": "T",
      "params": [],
      "pub": true,
      "range": {
        "end": {
          "character": 17,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "extern",
    },
  ],
}
`;

exports[`imports > parse pub modifier on extern values 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "range": {
            "end": {
              "character": 7,
              "line": 0,
            },
            "start": {
              "character": 0,
              "line": 0,
            },
          },
          "type": "@extern",
        },
        {
          "polytype": {
            "mono": {
              "args": [],
              "name": "Int",
              "range": {
                "end": {
                  "character": 17,
                  "line": 0,
                },
                "start": {
                  "character": 14,
                  "line": 0,
                },
              },
              "type": "named",
            },
            "range": {
              "end": {
                "character": 17,
                "line": 0,
              },
              "start": {
                "character": 14,
                "line": 0,
              },
            },
            "where": [],
          },
          "range": {
            "end": {
              "character": 17,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "@type",
        },
      ],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 27,
            "line": 0,
          },
          "start": {
            "character": 26,
            "line": 0,
          },
        },
      },
      "pub": true,
      "range": {
        "end": {
          "character": 27,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": undefined,
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`imports > parse pub modifier on types 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "name": "T",
      "params": [],
      "pub": true,
      "range": {
        "end": {
          "character": 14,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "adt",
      "variants": [],
    },
  ],
}
`;

exports[`imports > parse pub(..) modifier on types 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "name": "T",
      "params": [],
      "pub": "..",
      "range": {
        "end": {
          "character": 18,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "adt",
      "variants": [],
    },
  ],
}
`;

exports[`imports > type constructors can be qualified 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 16,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "name": "Name",
        "namespace": "A/B",
        "range": {
          "end": {
            "character": 16,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "identifier",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`imports > type defs can be qualified 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "range": {
            "end": {
              "character": 13,
              "line": 1,
            },
            "start": {
              "character": 6,
              "line": 1,
            },
          },
          "type": "@extern",
        },
        {
          "polytype": {
            "mono": {
              "args": [],
              "name": "MyType",
              "namespace": "A/B",
              "range": {
                "end": {
                  "character": 22,
                  "line": 2,
                },
                "start": {
                  "character": 12,
                  "line": 2,
                },
              },
              "type": "named",
            },
            "range": {
              "end": {
                "character": 22,
                "line": 2,
              },
              "start": {
                "character": 12,
                "line": 2,
              },
            },
            "where": [],
          },
          "range": {
            "end": {
              "character": 22,
              "line": 2,
            },
            "start": {
              "character": 6,
              "line": 2,
            },
          },
          "type": "@type",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 11,
            "line": 3,
          },
          "start": {
            "character": 10,
            "line": 3,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 11,
          "line": 3,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": undefined,
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`imports > unqualified import of a value 1`] = `
{
  "declarations": [],
  "imports": [
    {
      "exposing": [
        {
          "name": "imported",
          "range": {
            "end": {
              "character": 22,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "value",
        },
      ],
      "ns": "A/B/C",
      "range": {
        "end": {
          "character": 23,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
    },
  ],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`imports > unqualified import of an infix value 1`] = `
{
  "declarations": [],
  "imports": [
    {
      "exposing": [
        {
          "name": "+",
          "range": {
            "end": {
              "character": 13,
              "line": 0,
            },
            "start": {
              "character": 10,
              "line": 0,
            },
          },
          "type": "value",
        },
      ],
      "ns": "A",
      "range": {
        "end": {
          "character": 14,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
    },
  ],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`imports > unqualified import of types (non-opaque) 1`] = `
{
  "declarations": [],
  "imports": [
    {
      "exposing": [
        {
          "exposeImpl": true,
          "name": "T1",
          "range": {
            "end": {
              "character": 20,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "type",
        },
      ],
      "ns": "A/B/C",
      "range": {
        "end": {
          "character": 21,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
    },
  ],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`imports > unqualified import of types 1`] = `
{
  "declarations": [],
  "imports": [
    {
      "exposing": [
        {
          "exposeImpl": false,
          "name": "T1",
          "range": {
            "end": {
              "character": 16,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "type",
        },
        {
          "exposeImpl": false,
          "name": "T2",
          "range": {
            "end": {
              "character": 20,
              "line": 0,
            },
            "start": {
              "character": 18,
              "line": 0,
            },
          },
          "type": "type",
        },
      ],
      "ns": "A/B/C",
      "range": {
        "end": {
          "character": 21,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
    },
  ],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`imports > unqualified import of values 1`] = `
{
  "declarations": [],
  "imports": [
    {
      "exposing": [
        {
          "name": "x",
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "value",
        },
        {
          "name": "y",
          "range": {
            "end": {
              "character": 18,
              "line": 0,
            },
            "start": {
              "character": 17,
              "line": 0,
            },
          },
          "type": "value",
        },
        {
          "name": "z",
          "range": {
            "end": {
              "character": 21,
              "line": 0,
            },
            "start": {
              "character": 20,
              "line": 0,
            },
          },
          "type": "value",
        },
      ],
      "ns": "A/B/C",
      "range": {
        "end": {
          "character": 22,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
    },
  ],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`it should be possible to mix pipe with infix 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 9,
            "line": 1,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 31,
          "line": 1,
        },
        "start": {
          "character": 4,
          "line": 1,
        },
      },
      "value": {
        "left": {
          "left": {
            "left": {
              "range": {
                "end": {
                  "character": 13,
                  "line": 1,
                },
                "start": {
                  "character": 12,
                  "line": 1,
                },
              },
              "type": "constant",
              "value": {
                "type": "int",
                "value": 1,
              },
            },
            "operator": "+",
            "range": {
              "end": {
                "character": 17,
                "line": 1,
              },
              "start": {
                "character": 12,
                "line": 1,
              },
            },
            "right": {
              "range": {
                "end": {
                  "character": 17,
                  "line": 1,
                },
                "start": {
                  "character": 16,
                  "line": 1,
                },
              },
              "type": "constant",
              "value": {
                "type": "int",
                "value": 2,
              },
            },
            "type": "infix",
          },
          "range": {
            "end": {
              "character": 24,
              "line": 1,
            },
            "start": {
              "character": 12,
              "line": 1,
            },
          },
          "right": {
            "args": [],
            "caller": {
              "name": "f",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 22,
                  "line": 1,
                },
                "start": {
                  "character": 21,
                  "line": 1,
                },
              },
              "type": "identifier",
            },
            "range": {
              "end": {
                "character": 24,
                "line": 1,
              },
              "start": {
                "character": 21,
                "line": 1,
              },
            },
            "type": "application",
          },
          "type": "pipe",
        },
        "range": {
          "end": {
            "character": 31,
            "line": 1,
          },
          "start": {
            "character": 12,
            "line": 1,
          },
        },
        "right": {
          "args": [],
          "caller": {
            "name": "g",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 29,
                "line": 1,
              },
              "start": {
                "character": 28,
                "line": 1,
              },
            },
            "type": "identifier",
          },
          "range": {
            "end": {
              "character": 31,
              "line": 1,
            },
            "start": {
              "character": 28,
              "line": 1,
            },
          },
          "type": "application",
        },
        "type": "pipe",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`monadic let syntax sugar 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 9,
            "line": 1,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 5,
          "line": 4,
        },
        "start": {
          "character": 4,
          "line": 1,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 5,
            "line": 4,
          },
          "start": {
            "character": 12,
            "line": 1,
          },
        },
        "returning": {
          "name": "body",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 10,
              "line": 3,
            },
            "start": {
              "character": 6,
              "line": 3,
            },
          },
          "type": "identifier",
        },
        "statements": [
          {
            "mapper": {
              "name": "bind_f",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 16,
                  "line": 2,
                },
                "start": {
                  "character": 10,
                  "line": 2,
                },
              },
              "type": "identifier",
            },
            "pattern": {
              "name": "x",
              "range": {
                "end": {
                  "character": 18,
                  "line": 2,
                },
                "start": {
                  "character": 17,
                  "line": 2,
                },
              },
              "type": "identifier",
            },
            "range": {
              "end": {
                "character": 26,
                "line": 2,
              },
              "start": {
                "character": 6,
                "line": 2,
              },
            },
            "type": "let#",
            "value": {
              "name": "expr",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 25,
                  "line": 2,
                },
                "start": {
                  "character": 21,
                  "line": 2,
                },
              },
              "type": "identifier",
            },
          },
        ],
        "type": "block",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`monadic let syntax sugar should handle qualified names 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 9,
            "line": 1,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 5,
          "line": 4,
        },
        "start": {
          "character": 4,
          "line": 1,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 5,
            "line": 4,
          },
          "start": {
            "character": 12,
            "line": 1,
          },
        },
        "returning": {
          "name": "body",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 10,
              "line": 3,
            },
            "start": {
              "character": 6,
              "line": 3,
            },
          },
          "type": "identifier",
        },
        "statements": [
          {
            "mapper": {
              "name": "bind",
              "namespace": "Task",
              "range": {
                "end": {
                  "character": 19,
                  "line": 2,
                },
                "start": {
                  "character": 10,
                  "line": 2,
                },
              },
              "type": "identifier",
            },
            "pattern": {
              "name": "x",
              "range": {
                "end": {
                  "character": 21,
                  "line": 2,
                },
                "start": {
                  "character": 20,
                  "line": 2,
                },
              },
              "type": "identifier",
            },
            "range": {
              "end": {
                "character": 29,
                "line": 2,
              },
              "start": {
                "character": 6,
                "line": 2,
              },
            },
            "type": "let#",
            "value": {
              "name": "expr",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 28,
                  "line": 2,
                },
                "start": {
                  "character": 24,
                  "line": 2,
                },
              },
              "type": "identifier",
            },
          },
        ],
        "type": "block",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse * expr 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 13,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "left": {
          "range": {
            "end": {
              "character": 9,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "constant",
          "value": {
            "type": "int",
            "value": 1,
          },
        },
        "operator": "*",
        "range": {
          "end": {
            "character": 13,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "right": {
          "range": {
            "end": {
              "character": 13,
              "line": 0,
            },
            "start": {
              "character": 12,
              "line": 0,
            },
          },
          "type": "constant",
          "value": {
            "type": "int",
            "value": 2,
          },
        },
        "type": "infix",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse + and * prec 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 17,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "left": {
          "range": {
            "end": {
              "character": 9,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "constant",
          "value": {
            "type": "int",
            "value": 1,
          },
        },
        "operator": "-",
        "range": {
          "end": {
            "character": 17,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "right": {
          "left": {
            "range": {
              "end": {
                "character": 13,
                "line": 0,
              },
              "start": {
                "character": 12,
                "line": 0,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 2,
            },
          },
          "operator": "*",
          "range": {
            "end": {
              "character": 17,
              "line": 0,
            },
            "start": {
              "character": 12,
              "line": 0,
            },
          },
          "right": {
            "range": {
              "end": {
                "character": 17,
                "line": 0,
              },
              "start": {
                "character": 16,
                "line": 0,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 3,
            },
          },
          "type": "infix",
        },
        "type": "infix",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse + and * prec with parens 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 19,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "left": {
          "left": {
            "range": {
              "end": {
                "character": 10,
                "line": 0,
              },
              "start": {
                "character": 9,
                "line": 0,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 1,
            },
          },
          "operator": "-",
          "range": {
            "end": {
              "character": 14,
              "line": 0,
            },
            "start": {
              "character": 9,
              "line": 0,
            },
          },
          "right": {
            "range": {
              "end": {
                "character": 14,
                "line": 0,
              },
              "start": {
                "character": 13,
                "line": 0,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 2,
            },
          },
          "type": "infix",
        },
        "operator": "*",
        "range": {
          "end": {
            "character": 19,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "right": {
          "range": {
            "end": {
              "character": 19,
              "line": 0,
            },
            "start": {
              "character": 18,
              "line": 0,
            },
          },
          "type": "constant",
          "value": {
            "type": "int",
            "value": 3,
          },
        },
        "type": "infix",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse + expr 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 13,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "left": {
          "range": {
            "end": {
              "character": 9,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "constant",
          "value": {
            "type": "int",
            "value": 1,
          },
        },
        "operator": "+",
        "range": {
          "end": {
            "character": 13,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "right": {
          "range": {
            "end": {
              "character": 13,
              "line": 0,
            },
            "start": {
              "character": 12,
              "line": 0,
            },
          },
          "type": "constant",
          "value": {
            "type": "int",
            "value": 2,
          },
        },
        "type": "infix",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse +. expr 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 14,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "left": {
          "range": {
            "end": {
              "character": 9,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "constant",
          "value": {
            "type": "int",
            "value": 1,
          },
        },
        "operator": "+.",
        "range": {
          "end": {
            "character": 14,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "right": {
          "range": {
            "end": {
              "character": 14,
              "line": 0,
            },
            "start": {
              "character": 13,
              "line": 0,
            },
          },
          "type": "constant",
          "value": {
            "type": "int",
            "value": 2,
          },
        },
        "type": "infix",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse <= and && prec 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 19,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "left": {
          "left": {
            "name": "a",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 9,
                "line": 0,
              },
              "start": {
                "character": 8,
                "line": 0,
              },
            },
            "type": "identifier",
          },
          "operator": "<=",
          "range": {
            "end": {
              "character": 14,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "right": {
            "name": "b",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 14,
                "line": 0,
              },
              "start": {
                "character": 13,
                "line": 0,
              },
            },
            "type": "identifier",
          },
          "type": "infix",
        },
        "operator": "||",
        "range": {
          "end": {
            "character": 19,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "right": {
          "name": "y",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 19,
              "line": 0,
            },
            "start": {
              "character": 18,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "type": "infix",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse - expr 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 13,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "left": {
          "range": {
            "end": {
              "character": 9,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "constant",
          "value": {
            "type": "int",
            "value": 1,
          },
        },
        "operator": "-",
        "range": {
          "end": {
            "character": 13,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "right": {
          "range": {
            "end": {
              "character": 13,
              "line": 0,
            },
            "start": {
              "character": 12,
              "line": 0,
            },
          },
          "type": "constant",
          "value": {
            "type": "int",
            "value": 2,
          },
        },
        "type": "infix",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse appl with 1 arg 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 12,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "args": [
          {
            "name": "x",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 11,
                "line": 0,
              },
              "start": {
                "character": 10,
                "line": 0,
              },
            },
            "type": "identifier",
          },
        ],
        "caller": {
          "name": "f",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 9,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 12,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "application",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse appl with 3 args 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 18,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "args": [
          {
            "name": "x",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 11,
                "line": 0,
              },
              "start": {
                "character": 10,
                "line": 0,
              },
            },
            "type": "identifier",
          },
          {
            "name": "y",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 14,
                "line": 0,
              },
              "start": {
                "character": 13,
                "line": 0,
              },
            },
            "type": "identifier",
          },
          {
            "name": "z",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 17,
                "line": 0,
              },
              "start": {
                "character": 16,
                "line": 0,
              },
            },
            "type": "identifier",
          },
        ],
        "caller": {
          "name": "f",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 9,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 18,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "application",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse appl with nested expr 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 16,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "args": [
          {
            "left": {
              "range": {
                "end": {
                  "character": 11,
                  "line": 0,
                },
                "start": {
                  "character": 10,
                  "line": 0,
                },
              },
              "type": "constant",
              "value": {
                "type": "int",
                "value": 1,
              },
            },
            "operator": "+",
            "range": {
              "end": {
                "character": 15,
                "line": 0,
              },
              "start": {
                "character": 10,
                "line": 0,
              },
            },
            "right": {
              "range": {
                "end": {
                  "character": 15,
                  "line": 0,
                },
                "start": {
                  "character": 14,
                  "line": 0,
                },
              },
              "type": "constant",
              "value": {
                "type": "int",
                "value": 2,
              },
            },
            "type": "infix",
          },
        ],
        "caller": {
          "name": "f",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 9,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 16,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "application",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse appl with nested parens 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 14,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "args": [
          {
            "range": {
              "end": {
                "character": 12,
                "line": 0,
              },
              "start": {
                "character": 11,
                "line": 0,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 1,
            },
          },
        ],
        "caller": {
          "name": "f",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 9,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 14,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "application",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse appl with no args 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 11,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "args": [],
        "caller": {
          "name": "f",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 9,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 11,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "application",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse appl with trailing comma 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 3,
          "line": 3,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "args": [
          {
            "name": "x",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 5,
                "line": 1,
              },
              "start": {
                "character": 4,
                "line": 1,
              },
            },
            "type": "identifier",
          },
          {
            "name": "y",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 5,
                "line": 2,
              },
              "start": {
                "character": 4,
                "line": 2,
              },
            },
            "type": "identifier",
          },
        ],
        "caller": {
          "name": "f",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 9,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 3,
            "line": 3,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "application",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse block with no let 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 1,
          },
          "start": {
            "character": 4,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 13,
          "line": 1,
        },
        "start": {
          "character": 0,
          "line": 1,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 13,
            "line": 1,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
        "returning": {
          "range": {
            "end": {
              "character": 11,
              "line": 1,
            },
            "start": {
              "character": 10,
              "line": 1,
            },
          },
          "type": "constant",
          "value": {
            "type": "int",
            "value": 1,
          },
        },
        "statements": [],
        "type": "block",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse chars 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 11,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 11,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "constant",
        "value": {
          "type": "char",
          "value": "a",
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse cons operator is right-associative 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 21,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "args": [
          {
            "name": "a",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 9,
                "line": 0,
              },
              "start": {
                "character": 8,
                "line": 0,
              },
            },
            "type": "identifier",
          },
          {
            "args": [
              {
                "name": "b",
                "namespace": undefined,
                "range": {
                  "end": {
                    "character": 14,
                    "line": 0,
                  },
                  "start": {
                    "character": 13,
                    "line": 0,
                  },
                },
                "type": "identifier",
              },
              {
                "name": "nil",
                "namespace": undefined,
                "range": {
                  "end": {
                    "character": 21,
                    "line": 0,
                  },
                  "start": {
                    "character": 18,
                    "line": 0,
                  },
                },
                "type": "identifier",
              },
            ],
            "caller": {
              "name": "Cons",
              "namespace": "List",
              "range": {
                "end": {
                  "character": 17,
                  "line": 0,
                },
                "start": {
                  "character": 15,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
            "range": {
              "end": {
                "character": 21,
                "line": 0,
              },
              "start": {
                "character": 13,
                "line": 0,
              },
            },
            "type": "application",
          },
        ],
        "caller": {
          "name": "Cons",
          "namespace": "List",
          "range": {
            "end": {
              "character": 12,
              "line": 0,
            },
            "start": {
              "character": 10,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 21,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "application",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse conslist sugar 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 16,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "args": [
          {
            "name": "hd",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 10,
                "line": 0,
              },
              "start": {
                "character": 8,
                "line": 0,
              },
            },
            "type": "identifier",
          },
          {
            "name": "tl",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 16,
                "line": 0,
              },
              "start": {
                "character": 14,
                "line": 0,
              },
            },
            "type": "identifier",
          },
        ],
        "caller": {
          "name": "Cons",
          "namespace": "List",
          "range": {
            "end": {
              "character": 13,
              "line": 0,
            },
            "start": {
              "character": 11,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 16,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "application",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse empty list sugar 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 10,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 10,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "list-literal",
        "values": [],
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse empty strings 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 10,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 10,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "constant",
        "value": {
          "type": "string",
          "value": "",
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse float 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 12,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 12,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "constant",
        "value": {
          "type": "float",
          "value": 1.23,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse fn with 1 arg 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 1,
          },
          "start": {
            "character": 4,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 18,
          "line": 1,
        },
        "start": {
          "character": 0,
          "line": 1,
        },
      },
      "value": {
        "body": {
          "range": {
            "end": {
              "character": 18,
              "line": 1,
            },
            "start": {
              "character": 13,
              "line": 1,
            },
          },
          "returning": {
            "range": {
              "end": {
                "character": 16,
                "line": 1,
              },
              "start": {
                "character": 15,
                "line": 1,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 0,
            },
          },
          "statements": [],
          "type": "block",
        },
        "params": [
          {
            "name": "x",
            "range": {
              "end": {
                "character": 12,
                "line": 1,
              },
              "start": {
                "character": 11,
                "line": 1,
              },
            },
            "type": "identifier",
          },
        ],
        "range": {
          "end": {
            "character": 18,
            "line": 1,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
        "type": "fn",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse fn with 2 args 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 1,
          },
          "start": {
            "character": 4,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 21,
          "line": 1,
        },
        "start": {
          "character": 0,
          "line": 1,
        },
      },
      "value": {
        "body": {
          "range": {
            "end": {
              "character": 21,
              "line": 1,
            },
            "start": {
              "character": 16,
              "line": 1,
            },
          },
          "returning": {
            "range": {
              "end": {
                "character": 19,
                "line": 1,
              },
              "start": {
                "character": 18,
                "line": 1,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 0,
            },
          },
          "statements": [],
          "type": "block",
        },
        "params": [
          {
            "name": "x",
            "range": {
              "end": {
                "character": 12,
                "line": 1,
              },
              "start": {
                "character": 11,
                "line": 1,
              },
            },
            "type": "identifier",
          },
          {
            "name": "y",
            "range": {
              "end": {
                "character": 15,
                "line": 1,
              },
              "start": {
                "character": 14,
                "line": 1,
              },
            },
            "type": "identifier",
          },
        ],
        "range": {
          "end": {
            "character": 21,
            "line": 1,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
        "type": "fn",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse fn with let 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 1,
          },
          "start": {
            "character": 4,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 1,
          "line": 4,
        },
        "start": {
          "character": 0,
          "line": 1,
        },
      },
      "value": {
        "body": {
          "range": {
            "end": {
              "character": 1,
              "line": 4,
            },
            "start": {
              "character": 11,
              "line": 1,
            },
          },
          "returning": {
            "range": {
              "end": {
                "character": 3,
                "line": 3,
              },
              "start": {
                "character": 2,
                "line": 3,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 1,
            },
          },
          "statements": [
            {
              "pattern": {
                "name": "x",
                "range": {
                  "end": {
                    "character": 7,
                    "line": 2,
                  },
                  "start": {
                    "character": 6,
                    "line": 2,
                  },
                },
                "type": "identifier",
              },
              "range": {
                "end": {
                  "character": 12,
                  "line": 2,
                },
                "start": {
                  "character": 2,
                  "line": 2,
                },
              },
              "type": "let",
              "value": {
                "range": {
                  "end": {
                    "character": 11,
                    "line": 2,
                  },
                  "start": {
                    "character": 10,
                    "line": 2,
                  },
                },
                "type": "constant",
                "value": {
                  "type": "int",
                  "value": 0,
                },
              },
            },
          ],
          "type": "block",
        },
        "params": [],
        "range": {
          "end": {
            "character": 1,
            "line": 4,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
        "type": "fn",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse fn with no args 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 1,
          },
          "start": {
            "character": 4,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 16,
          "line": 1,
        },
        "start": {
          "character": 0,
          "line": 1,
        },
      },
      "value": {
        "body": {
          "range": {
            "end": {
              "character": 16,
              "line": 1,
            },
            "start": {
              "character": 11,
              "line": 1,
            },
          },
          "returning": {
            "range": {
              "end": {
                "character": 14,
                "line": 1,
              },
              "start": {
                "character": 13,
                "line": 1,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 0,
            },
          },
          "statements": [],
          "type": "block",
        },
        "params": [],
        "range": {
          "end": {
            "character": 16,
            "line": 1,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
        "type": "fn",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse ident 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 13,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "name": "ab_c2",
        "namespace": undefined,
        "range": {
          "end": {
            "character": 13,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "identifier",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse if expr 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 1,
          },
          "start": {
            "character": 4,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 29,
          "line": 1,
        },
        "start": {
          "character": 0,
          "line": 1,
        },
      },
      "value": {
        "condition": {
          "name": "b",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 12,
              "line": 1,
            },
            "start": {
              "character": 11,
              "line": 1,
            },
          },
          "type": "identifier",
        },
        "else": {
          "range": {
            "end": {
              "character": 29,
              "line": 1,
            },
            "start": {
              "character": 24,
              "line": 1,
            },
          },
          "returning": {
            "range": {
              "end": {
                "character": 27,
                "line": 1,
              },
              "start": {
                "character": 26,
                "line": 1,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 1,
            },
          },
          "statements": [],
          "type": "block",
        },
        "range": {
          "end": {
            "character": 29,
            "line": 1,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
        "then": {
          "range": {
            "end": {
              "character": 18,
              "line": 1,
            },
            "start": {
              "character": 13,
              "line": 1,
            },
          },
          "returning": {
            "range": {
              "end": {
                "character": 16,
                "line": 1,
              },
              "start": {
                "character": 15,
                "line": 1,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 0,
            },
          },
          "statements": [],
          "type": "block",
        },
        "type": "if",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse if expr with a let expr 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 1,
          },
          "start": {
            "character": 4,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 1,
          "line": 6,
        },
        "start": {
          "character": 0,
          "line": 1,
        },
      },
      "value": {
        "condition": {
          "name": "b",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 12,
              "line": 1,
            },
            "start": {
              "character": 11,
              "line": 1,
            },
          },
          "type": "identifier",
        },
        "else": {
          "range": {
            "end": {
              "character": 1,
              "line": 6,
            },
            "start": {
              "character": 7,
              "line": 4,
            },
          },
          "returning": {
            "range": {
              "end": {
                "character": 3,
                "line": 5,
              },
              "start": {
                "character": 2,
                "line": 5,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 1,
            },
          },
          "statements": [],
          "type": "block",
        },
        "range": {
          "end": {
            "character": 1,
            "line": 6,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
        "then": {
          "range": {
            "end": {
              "character": 1,
              "line": 4,
            },
            "start": {
              "character": 13,
              "line": 1,
            },
          },
          "returning": {
            "range": {
              "end": {
                "character": 3,
                "line": 3,
              },
              "start": {
                "character": 2,
                "line": 3,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 0,
            },
          },
          "statements": [
            {
              "pattern": {
                "name": "x",
                "range": {
                  "end": {
                    "character": 7,
                    "line": 2,
                  },
                  "start": {
                    "character": 6,
                    "line": 2,
                  },
                },
                "type": "identifier",
              },
              "range": {
                "end": {
                  "character": 12,
                  "line": 2,
                },
                "start": {
                  "character": 2,
                  "line": 2,
                },
              },
              "type": "let",
              "value": {
                "name": "a",
                "namespace": undefined,
                "range": {
                  "end": {
                    "character": 11,
                    "line": 2,
                  },
                  "start": {
                    "character": 10,
                    "line": 2,
                  },
                },
                "type": "identifier",
              },
            },
          ],
          "type": "block",
        },
        "type": "if",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse let block with one let 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 1,
          },
          "start": {
            "character": 4,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 1,
          "line": 4,
        },
        "start": {
          "character": 0,
          "line": 1,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 1,
            "line": 4,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
        "returning": {
          "range": {
            "end": {
              "character": 3,
              "line": 3,
            },
            "start": {
              "character": 2,
              "line": 3,
            },
          },
          "type": "constant",
          "value": {
            "type": "int",
            "value": 1,
          },
        },
        "statements": [
          {
            "pattern": {
              "name": "x",
              "range": {
                "end": {
                  "character": 7,
                  "line": 2,
                },
                "start": {
                  "character": 6,
                  "line": 2,
                },
              },
              "type": "identifier",
            },
            "range": {
              "end": {
                "character": 12,
                "line": 2,
              },
              "start": {
                "character": 2,
                "line": 2,
              },
            },
            "type": "let",
            "value": {
              "range": {
                "end": {
                  "character": 11,
                  "line": 2,
                },
                "start": {
                  "character": 10,
                  "line": 2,
                },
              },
              "type": "constant",
              "value": {
                "type": "int",
                "value": 0,
              },
            },
          },
        ],
        "type": "block",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse let block with two let stmts 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 1,
          },
          "start": {
            "character": 4,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 1,
          "line": 5,
        },
        "start": {
          "character": 0,
          "line": 1,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 1,
            "line": 5,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
        "returning": {
          "range": {
            "end": {
              "character": 3,
              "line": 4,
            },
            "start": {
              "character": 2,
              "line": 4,
            },
          },
          "type": "constant",
          "value": {
            "type": "int",
            "value": 2,
          },
        },
        "statements": [
          {
            "pattern": {
              "name": "x",
              "range": {
                "end": {
                  "character": 7,
                  "line": 2,
                },
                "start": {
                  "character": 6,
                  "line": 2,
                },
              },
              "type": "identifier",
            },
            "range": {
              "end": {
                "character": 12,
                "line": 2,
              },
              "start": {
                "character": 2,
                "line": 2,
              },
            },
            "type": "let",
            "value": {
              "range": {
                "end": {
                  "character": 11,
                  "line": 2,
                },
                "start": {
                  "character": 10,
                  "line": 2,
                },
              },
              "type": "constant",
              "value": {
                "type": "int",
                "value": 0,
              },
            },
          },
          {
            "pattern": {
              "name": "y",
              "range": {
                "end": {
                  "character": 7,
                  "line": 3,
                },
                "start": {
                  "character": 6,
                  "line": 3,
                },
              },
              "type": "identifier",
            },
            "range": {
              "end": {
                "character": 12,
                "line": 3,
              },
              "start": {
                "character": 2,
                "line": 3,
              },
            },
            "type": "let",
            "value": {
              "range": {
                "end": {
                  "character": 11,
                  "line": 3,
                },
                "start": {
                  "character": 10,
                  "line": 3,
                },
              },
              "type": "constant",
              "value": {
                "type": "int",
                "value": 1,
              },
            },
          },
        ],
        "type": "block",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse list sugar with many values 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 17,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 17,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "list-literal",
        "values": [
          {
            "range": {
              "end": {
                "character": 10,
                "line": 0,
              },
              "start": {
                "character": 9,
                "line": 0,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 0,
            },
          },
          {
            "range": {
              "end": {
                "character": 13,
                "line": 0,
              },
              "start": {
                "character": 12,
                "line": 0,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 1,
            },
          },
          {
            "range": {
              "end": {
                "character": 16,
                "line": 0,
              },
              "start": {
                "character": 15,
                "line": 0,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 2,
            },
          },
        ],
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse nonempty strings 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 13,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 13,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "constant",
        "value": {
          "type": "string",
          "value": "abc",
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse singleton list sugar 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 12,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 12,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "list-literal",
        "values": [
          {
            "range": {
              "end": {
                "character": 11,
                "line": 0,
              },
              "start": {
                "character": 9,
                "line": 0,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 42,
            },
          },
        ],
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse strings with escaped quotes 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 15,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 15,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "constant",
        "value": {
          "type": "string",
          "value": "ab\\"c",
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse strings with newlines 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 15,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 15,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "constant",
        "value": {
          "type": "string",
          "value": "ab\\nc",
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse tuple sugar 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 14,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "args": [
          {
            "range": {
              "end": {
                "character": 10,
                "line": 0,
              },
              "start": {
                "character": 9,
                "line": 0,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 1,
            },
          },
          {
            "range": {
              "end": {
                "character": 13,
                "line": 0,
              },
              "start": {
                "character": 12,
                "line": 0,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 2,
            },
          },
        ],
        "caller": {
          "name": "Tuple2",
          "namespace": "Tuple",
          "range": {
            "end": {
              "character": 14,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 14,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "application",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`parse unary ! expr 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 11,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "args": [
          {
            "name": "b",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 11,
                "line": 0,
              },
              "start": {
                "character": 10,
                "line": 0,
              },
            },
            "type": "identifier",
          },
        ],
        "caller": {
          "name": "!",
          "range": {
            "end": {
              "character": 9,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 11,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "application",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > binding with identifier 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 28,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "clauses": [
          [
            {
              "name": "a",
              "range": {
                "end": {
                  "character": 19,
                  "line": 0,
                },
                "start": {
                  "character": 18,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
            {
              "name": "res",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 26,
                  "line": 0,
                },
                "start": {
                  "character": 23,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          ],
        ],
        "expr": {
          "name": "x",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 28,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "match",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > empty match expression 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 18,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "clauses": [],
        "expr": {
          "name": "x",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 18,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "match",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching char literals 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 30,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "clauses": [
          [
            {
              "literal": {
                "type": "char",
                "value": "a",
              },
              "range": {
                "end": {
                  "character": 21,
                  "line": 0,
                },
                "start": {
                  "character": 18,
                  "line": 0,
                },
              },
              "type": "lit",
            },
            {
              "name": "res",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 28,
                  "line": 0,
                },
                "start": {
                  "character": 25,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          ],
        ],
        "expr": {
          "name": "x",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 30,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "match",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching cons literal (syntax sugar) 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 35,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "clauses": [
          [
            {
              "args": [
                {
                  "name": "hd",
                  "range": {
                    "end": {
                      "character": 20,
                      "line": 0,
                    },
                    "start": {
                      "character": 18,
                      "line": 0,
                    },
                  },
                  "type": "identifier",
                },
                {
                  "name": "tl",
                  "range": {
                    "end": {
                      "character": 26,
                      "line": 0,
                    },
                    "start": {
                      "character": 24,
                      "line": 0,
                    },
                  },
                  "type": "identifier",
                },
              ],
              "name": "Cons",
              "namespace": "List",
              "range": {
                "end": {
                  "character": 26,
                  "line": 0,
                },
                "start": {
                  "character": 18,
                  "line": 0,
                },
              },
              "type": "constructor",
            },
            {
              "name": "res",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 33,
                  "line": 0,
                },
                "start": {
                  "character": 30,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          ],
        ],
        "expr": {
          "name": "x",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 35,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "match",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching cons literal is right assoc 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 42,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "clauses": [
          [
            {
              "args": [
                {
                  "name": "hd",
                  "range": {
                    "end": {
                      "character": 20,
                      "line": 0,
                    },
                    "start": {
                      "character": 18,
                      "line": 0,
                    },
                  },
                  "type": "identifier",
                },
                {
                  "args": [
                    {
                      "name": "tl",
                      "range": {
                        "end": {
                          "character": 26,
                          "line": 0,
                        },
                        "start": {
                          "character": 24,
                          "line": 0,
                        },
                      },
                      "type": "identifier",
                    },
                    {
                      "args": [],
                      "name": "Nil",
                      "namespace": undefined,
                      "range": {
                        "end": {
                          "character": 33,
                          "line": 0,
                        },
                        "start": {
                          "character": 30,
                          "line": 0,
                        },
                      },
                      "type": "constructor",
                    },
                  ],
                  "name": "Cons",
                  "namespace": "List",
                  "range": {
                    "end": {
                      "character": 33,
                      "line": 0,
                    },
                    "start": {
                      "character": 24,
                      "line": 0,
                    },
                  },
                  "type": "constructor",
                },
              ],
              "name": "Cons",
              "namespace": "List",
              "range": {
                "end": {
                  "character": 33,
                  "line": 0,
                },
                "start": {
                  "character": 18,
                  "line": 0,
                },
              },
              "type": "constructor",
            },
            {
              "name": "res",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 40,
                  "line": 0,
                },
                "start": {
                  "character": 37,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          ],
        ],
        "expr": {
          "name": "x",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 42,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "match",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching cons nested in tuple 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 41,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "clauses": [
          [
            {
              "args": [
                {
                  "args": [
                    {
                      "name": "hd",
                      "range": {
                        "end": {
                          "character": 21,
                          "line": 0,
                        },
                        "start": {
                          "character": 19,
                          "line": 0,
                        },
                      },
                      "type": "identifier",
                    },
                    {
                      "args": [],
                      "name": "Nil",
                      "namespace": undefined,
                      "range": {
                        "end": {
                          "character": 28,
                          "line": 0,
                        },
                        "start": {
                          "character": 25,
                          "line": 0,
                        },
                      },
                      "type": "constructor",
                    },
                  ],
                  "name": "Cons",
                  "namespace": "List",
                  "range": {
                    "end": {
                      "character": 28,
                      "line": 0,
                    },
                    "start": {
                      "character": 19,
                      "line": 0,
                    },
                  },
                  "type": "constructor",
                },
                {
                  "name": "y",
                  "range": {
                    "end": {
                      "character": 31,
                      "line": 0,
                    },
                    "start": {
                      "character": 30,
                      "line": 0,
                    },
                  },
                  "type": "identifier",
                },
              ],
              "name": "Tuple2",
              "namespace": "Tuple",
              "range": {
                "end": {
                  "character": 32,
                  "line": 0,
                },
                "start": {
                  "character": 18,
                  "line": 0,
                },
              },
              "type": "constructor",
            },
            {
              "name": "res",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 39,
                  "line": 0,
                },
                "start": {
                  "character": 36,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          ],
        ],
        "expr": {
          "name": "x",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 41,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "match",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching constructor with no args 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 28,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "clauses": [
          [
            {
              "args": [],
              "name": "X",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 19,
                  "line": 0,
                },
                "start": {
                  "character": 18,
                  "line": 0,
                },
              },
              "type": "constructor",
            },
            {
              "name": "res",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 26,
                  "line": 0,
                },
                "start": {
                  "character": 23,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          ],
        ],
        "expr": {
          "name": "x",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 28,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "match",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching constructor with one arg 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 31,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "clauses": [
          [
            {
              "args": [
                {
                  "name": "a",
                  "range": {
                    "end": {
                      "character": 21,
                      "line": 0,
                    },
                    "start": {
                      "character": 20,
                      "line": 0,
                    },
                  },
                  "type": "identifier",
                },
              ],
              "name": "X",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 22,
                  "line": 0,
                },
                "start": {
                  "character": 18,
                  "line": 0,
                },
              },
              "type": "constructor",
            },
            {
              "name": "res",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 29,
                  "line": 0,
                },
                "start": {
                  "character": 26,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          ],
        ],
        "expr": {
          "name": "x",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 31,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "match",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching float literals 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 30,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "clauses": [
          [
            {
              "literal": {
                "type": "float",
                "value": 1.1,
              },
              "range": {
                "end": {
                  "character": 21,
                  "line": 0,
                },
                "start": {
                  "character": 18,
                  "line": 0,
                },
              },
              "type": "lit",
            },
            {
              "name": "res",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 28,
                  "line": 0,
                },
                "start": {
                  "character": 25,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          ],
        ],
        "expr": {
          "name": "x",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 30,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "match",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching int literals 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 29,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "clauses": [
          [
            {
              "literal": {
                "type": "int",
                "value": 42,
              },
              "range": {
                "end": {
                  "character": 20,
                  "line": 0,
                },
                "start": {
                  "character": 18,
                  "line": 0,
                },
              },
              "type": "lit",
            },
            {
              "name": "res",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 27,
                  "line": 0,
                },
                "start": {
                  "character": 24,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          ],
        ],
        "expr": {
          "name": "x",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 29,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "match",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching many clauses, with trailing comma 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 44,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "clauses": [
          [
            {
              "name": "a",
              "range": {
                "end": {
                  "character": 19,
                  "line": 0,
                },
                "start": {
                  "character": 18,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
            {
              "name": "ret_a",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 28,
                  "line": 0,
                },
                "start": {
                  "character": 23,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          ],
          [
            {
              "name": "b",
              "range": {
                "end": {
                  "character": 31,
                  "line": 0,
                },
                "start": {
                  "character": 30,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
            {
              "name": "ret_b",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 40,
                  "line": 0,
                },
                "start": {
                  "character": 35,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          ],
        ],
        "expr": {
          "name": "x",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 44,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "match",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching many clauses, without trailing comma 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 43,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "clauses": [
          [
            {
              "name": "a",
              "range": {
                "end": {
                  "character": 19,
                  "line": 0,
                },
                "start": {
                  "character": 18,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
            {
              "name": "ret_a",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 28,
                  "line": 0,
                },
                "start": {
                  "character": 23,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          ],
          [
            {
              "name": "b",
              "range": {
                "end": {
                  "character": 31,
                  "line": 0,
                },
                "start": {
                  "character": 30,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
            {
              "name": "ret_b",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 40,
                  "line": 0,
                },
                "start": {
                  "character": 35,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          ],
        ],
        "expr": {
          "name": "x",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 43,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "match",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching pattern in fn param 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 25,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "body": {
          "range": {
            "end": {
              "character": 25,
              "line": 0,
            },
            "start": {
              "character": 19,
              "line": 0,
            },
          },
          "returning": {
            "range": {
              "end": {
                "character": 23,
                "line": 0,
              },
              "start": {
                "character": 21,
                "line": 0,
              },
            },
            "type": "constant",
            "value": {
              "type": "int",
              "value": 42,
            },
          },
          "statements": [],
          "type": "block",
        },
        "params": [
          {
            "args": [
              {
                "name": "a",
                "range": {
                  "end": {
                    "character": 14,
                    "line": 0,
                  },
                  "start": {
                    "character": 13,
                    "line": 0,
                  },
                },
                "type": "identifier",
              },
              {
                "name": "b",
                "range": {
                  "end": {
                    "character": 17,
                    "line": 0,
                  },
                  "start": {
                    "character": 16,
                    "line": 0,
                  },
                },
                "type": "identifier",
              },
            ],
            "name": "X",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 18,
                "line": 0,
              },
              "start": {
                "character": 11,
                "line": 0,
              },
            },
            "type": "constructor",
          },
        ],
        "range": {
          "end": {
            "character": 25,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "fn",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching pattern in let 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 37,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 37,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "returning": {
          "name": "res",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 35,
              "line": 0,
            },
            "start": {
              "character": 32,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "statements": [
          {
            "pattern": {
              "args": [
                {
                  "name": "a",
                  "range": {
                    "end": {
                      "character": 17,
                      "line": 0,
                    },
                    "start": {
                      "character": 16,
                      "line": 0,
                    },
                  },
                  "type": "identifier",
                },
                {
                  "args": [
                    {
                      "name": "b",
                      "range": {
                        "end": {
                          "character": 20,
                          "line": 0,
                        },
                        "start": {
                          "character": 19,
                          "line": 0,
                        },
                      },
                      "type": "identifier",
                    },
                    {
                      "name": "c",
                      "range": {
                        "end": {
                          "character": 25,
                          "line": 0,
                        },
                        "start": {
                          "character": 24,
                          "line": 0,
                        },
                      },
                      "type": "identifier",
                    },
                  ],
                  "name": "Cons",
                  "namespace": "List",
                  "range": {
                    "end": {
                      "character": 25,
                      "line": 0,
                    },
                    "start": {
                      "character": 19,
                      "line": 0,
                    },
                  },
                  "type": "constructor",
                },
              ],
              "name": "X",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 26,
                  "line": 0,
                },
                "start": {
                  "character": 14,
                  "line": 0,
                },
              },
              "type": "constructor",
            },
            "range": {
              "end": {
                "character": 31,
                "line": 0,
              },
              "start": {
                "character": 10,
                "line": 0,
              },
            },
            "type": "let",
            "value": {
              "name": "x",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 30,
                  "line": 0,
                },
                "start": {
                  "character": 29,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          },
        ],
        "type": "block",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching pattern in let# 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 43,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 43,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "returning": {
          "name": "res",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 41,
              "line": 0,
            },
            "start": {
              "character": 38,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "statements": [
          {
            "mapper": {
              "name": "ident",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 19,
                  "line": 0,
                },
                "start": {
                  "character": 14,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
            "pattern": {
              "args": [
                {
                  "name": "a",
                  "range": {
                    "end": {
                      "character": 23,
                      "line": 0,
                    },
                    "start": {
                      "character": 22,
                      "line": 0,
                    },
                  },
                  "type": "identifier",
                },
                {
                  "args": [
                    {
                      "name": "b",
                      "range": {
                        "end": {
                          "character": 26,
                          "line": 0,
                        },
                        "start": {
                          "character": 25,
                          "line": 0,
                        },
                      },
                      "type": "identifier",
                    },
                    {
                      "name": "c",
                      "range": {
                        "end": {
                          "character": 31,
                          "line": 0,
                        },
                        "start": {
                          "character": 30,
                          "line": 0,
                        },
                      },
                      "type": "identifier",
                    },
                  ],
                  "name": "Cons",
                  "namespace": "List",
                  "range": {
                    "end": {
                      "character": 31,
                      "line": 0,
                    },
                    "start": {
                      "character": 25,
                      "line": 0,
                    },
                  },
                  "type": "constructor",
                },
              ],
              "name": "X",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 32,
                  "line": 0,
                },
                "start": {
                  "character": 20,
                  "line": 0,
                },
              },
              "type": "constructor",
            },
            "range": {
              "end": {
                "character": 37,
                "line": 0,
              },
              "start": {
                "character": 10,
                "line": 0,
              },
            },
            "type": "let#",
            "value": {
              "name": "x",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 36,
                  "line": 0,
                },
                "start": {
                  "character": 35,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          },
        ],
        "type": "block",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching qualified constructors 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 42,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "clauses": [
          [
            {
              "args": [
                {
                  "name": "a",
                  "range": {
                    "end": {
                      "character": 30,
                      "line": 0,
                    },
                    "start": {
                      "character": 29,
                      "line": 0,
                    },
                  },
                  "type": "identifier",
                },
                {
                  "name": "b",
                  "range": {
                    "end": {
                      "character": 33,
                      "line": 0,
                    },
                    "start": {
                      "character": 32,
                      "line": 0,
                    },
                  },
                  "type": "identifier",
                },
              ],
              "name": "Constr",
              "namespace": "A/B",
              "range": {
                "end": {
                  "character": 34,
                  "line": 0,
                },
                "start": {
                  "character": 18,
                  "line": 0,
                },
              },
              "type": "constructor",
            },
            {
              "range": {
                "end": {
                  "character": 40,
                  "line": 0,
                },
                "start": {
                  "character": 38,
                  "line": 0,
                },
              },
              "type": "constant",
              "value": {
                "type": "int",
                "value": 42,
              },
            },
          ],
        ],
        "expr": {
          "name": "x",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 42,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "match",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching str literals 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 32,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "clauses": [
          [
            {
              "literal": {
                "type": "string",
                "value": "abc",
              },
              "range": {
                "end": {
                  "character": 23,
                  "line": 0,
                },
                "start": {
                  "character": 18,
                  "line": 0,
                },
              },
              "type": "lit",
            },
            {
              "name": "res",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 30,
                  "line": 0,
                },
                "start": {
                  "character": 27,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          ],
        ],
        "expr": {
          "name": "x",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 32,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "match",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pattern matching > matching tuples literal (syntax sugar) 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 33,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "clauses": [
          [
            {
              "args": [
                {
                  "name": "x",
                  "range": {
                    "end": {
                      "character": 20,
                      "line": 0,
                    },
                    "start": {
                      "character": 19,
                      "line": 0,
                    },
                  },
                  "type": "identifier",
                },
                {
                  "name": "y",
                  "range": {
                    "end": {
                      "character": 23,
                      "line": 0,
                    },
                    "start": {
                      "character": 22,
                      "line": 0,
                    },
                  },
                  "type": "identifier",
                },
              ],
              "name": "Tuple2",
              "namespace": "Tuple",
              "range": {
                "end": {
                  "character": 24,
                  "line": 0,
                },
                "start": {
                  "character": 18,
                  "line": 0,
                },
              },
              "type": "constructor",
            },
            {
              "name": "res",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 31,
                  "line": 0,
                },
                "start": {
                  "character": 28,
                  "line": 0,
                },
              },
              "type": "identifier",
            },
          ],
        ],
        "expr": {
          "name": "x",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 14,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 33,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "type": "match",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pipe syntax sugar 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 9,
            "line": 1,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 24,
          "line": 1,
        },
        "start": {
          "character": 4,
          "line": 1,
        },
      },
      "value": {
        "left": {
          "name": "a",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 13,
              "line": 1,
            },
            "start": {
              "character": 12,
              "line": 1,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 24,
            "line": 1,
          },
          "start": {
            "character": 12,
            "line": 1,
          },
        },
        "right": {
          "args": [
            {
              "name": "x",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 20,
                  "line": 1,
                },
                "start": {
                  "character": 19,
                  "line": 1,
                },
              },
              "type": "identifier",
            },
            {
              "name": "y",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 23,
                  "line": 1,
                },
                "start": {
                  "character": 22,
                  "line": 1,
                },
              },
              "type": "identifier",
            },
          ],
          "caller": {
            "name": "f",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 18,
                "line": 1,
              },
              "start": {
                "character": 17,
                "line": 1,
              },
            },
            "type": "identifier",
          },
          "range": {
            "end": {
              "character": 24,
              "line": 1,
            },
            "start": {
              "character": 17,
              "line": 1,
            },
          },
          "type": "application",
        },
        "type": "pipe",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pipe syntax sugar should be chainable 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 9,
            "line": 1,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 27,
          "line": 1,
        },
        "start": {
          "character": 4,
          "line": 1,
        },
      },
      "value": {
        "left": {
          "left": {
            "name": "a",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 13,
                "line": 1,
              },
              "start": {
                "character": 12,
                "line": 1,
              },
            },
            "type": "identifier",
          },
          "range": {
            "end": {
              "character": 20,
              "line": 1,
            },
            "start": {
              "character": 12,
              "line": 1,
            },
          },
          "right": {
            "args": [],
            "caller": {
              "name": "f",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 18,
                  "line": 1,
                },
                "start": {
                  "character": 17,
                  "line": 1,
                },
              },
              "type": "identifier",
            },
            "range": {
              "end": {
                "character": 20,
                "line": 1,
              },
              "start": {
                "character": 17,
                "line": 1,
              },
            },
            "type": "application",
          },
          "type": "pipe",
        },
        "range": {
          "end": {
            "character": 27,
            "line": 1,
          },
          "start": {
            "character": 12,
            "line": 1,
          },
        },
        "right": {
          "args": [],
          "caller": {
            "name": "g",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 25,
                "line": 1,
              },
              "start": {
                "character": 24,
                "line": 1,
              },
            },
            "type": "identifier",
          },
          "range": {
            "end": {
              "character": 27,
              "line": 1,
            },
            "start": {
              "character": 24,
              "line": 1,
            },
          },
          "type": "application",
        },
        "type": "pipe",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`pipe syntax sugar should handle qualified names 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 9,
            "line": 1,
          },
          "start": {
            "character": 8,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 28,
          "line": 1,
        },
        "start": {
          "character": 4,
          "line": 1,
        },
      },
      "value": {
        "left": {
          "name": "a",
          "namespace": "Mod",
          "range": {
            "end": {
              "character": 17,
              "line": 1,
            },
            "start": {
              "character": 12,
              "line": 1,
            },
          },
          "type": "identifier",
        },
        "range": {
          "end": {
            "character": 28,
            "line": 1,
          },
          "start": {
            "character": 12,
            "line": 1,
          },
        },
        "right": {
          "args": [
            {
              "name": "x",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 24,
                  "line": 1,
                },
                "start": {
                  "character": 23,
                  "line": 1,
                },
              },
              "type": "identifier",
            },
            {
              "name": "y",
              "namespace": undefined,
              "range": {
                "end": {
                  "character": 27,
                  "line": 1,
                },
                "start": {
                  "character": 26,
                  "line": 1,
                },
              },
              "type": "identifier",
            },
          ],
          "caller": {
            "name": "f",
            "namespace": undefined,
            "range": {
              "end": {
                "character": 22,
                "line": 1,
              },
              "start": {
                "character": 21,
                "line": 1,
              },
            },
            "type": "identifier",
          },
          "range": {
            "end": {
              "character": 28,
              "line": 1,
            },
            "start": {
              "character": 21,
              "line": 1,
            },
          },
          "type": "application",
        },
        "type": "pipe",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`structs > construct fields with many fields 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 11,
            "line": 1,
          },
          "start": {
            "character": 10,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 7,
          "line": 4,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": {
        "fields": [
          {
            "field": {
              "name": "a",
              "range": {
                "end": {
                  "character": 9,
                  "line": 2,
                },
                "start": {
                  "character": 8,
                  "line": 2,
                },
              },
            },
            "range": {
              "end": {
                "character": 13,
                "line": 2,
              },
              "start": {
                "character": 8,
                "line": 2,
              },
            },
            "value": {
              "range": {
                "end": {
                  "character": 13,
                  "line": 2,
                },
                "start": {
                  "character": 11,
                  "line": 2,
                },
              },
              "type": "constant",
              "value": {
                "type": "int",
                "value": 42,
              },
            },
          },
          {
            "field": {
              "name": "b",
              "range": {
                "end": {
                  "character": 9,
                  "line": 3,
                },
                "start": {
                  "character": 8,
                  "line": 3,
                },
              },
            },
            "range": {
              "end": {
                "character": 15,
                "line": 3,
              },
              "start": {
                "character": 8,
                "line": 3,
              },
            },
            "value": {
              "range": {
                "end": {
                  "character": 15,
                  "line": 3,
                },
                "start": {
                  "character": 11,
                  "line": 3,
                },
              },
              "type": "constant",
              "value": {
                "type": "string",
                "value": "ok",
              },
            },
          },
        ],
        "range": {
          "end": {
            "character": 7,
            "line": 4,
          },
          "start": {
            "character": 14,
            "line": 1,
          },
        },
        "spread": undefined,
        "struct": {
          "name": "MyStruct",
          "range": {
            "end": {
              "character": 22,
              "line": 1,
            },
            "start": {
              "character": 14,
              "line": 1,
            },
          },
        },
        "type": "struct-literal",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`structs > construct fields with no fields 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 20,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "fields": [],
        "range": {
          "end": {
            "character": 20,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "spread": undefined,
        "struct": {
          "name": "MyStruct",
          "range": {
            "end": {
              "character": 16,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
        },
        "type": "struct-literal",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`structs > doc comments 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "docComment": " example docs
",
      "fields": [],
      "name": "Person",
      "params": [],
      "pub": false,
      "range": {
        "end": {
          "character": 28,
          "line": 2,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "type": "struct",
    },
  ],
}
`;

exports[`structs > empty struct 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "fields": [],
      "name": "Person",
      "params": [],
      "pub": false,
      "range": {
        "end": {
          "character": 22,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "struct",
    },
  ],
}
`;

exports[`structs > field 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "fields": [
        {
          "name": "age",
          "range": {
            "end": {
              "character": 29,
              "line": 0,
            },
            "start": {
              "character": 21,
              "line": 0,
            },
          },
          "typeAst": {
            "args": [],
            "name": "Int",
            "range": {
              "end": {
                "character": 29,
                "line": 0,
              },
              "start": {
                "character": 26,
                "line": 0,
              },
            },
            "type": "named",
          },
        },
      ],
      "name": "Person",
      "params": [],
      "pub": false,
      "range": {
        "end": {
          "character": 31,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "struct",
    },
  ],
}
`;

exports[`structs > field access 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 18,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "field": {
          "name": "my_field",
          "range": {
            "end": {
              "character": 18,
              "line": 0,
            },
            "start": {
              "character": 10,
              "line": 0,
            },
          },
          "structName": undefined,
        },
        "range": {
          "end": {
            "character": 18,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "struct": {
          "name": "s",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 9,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "type": "field-access",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`structs > many fields 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "fields": [
        {
          "name": "name",
          "range": {
            "end": {
              "character": 15,
              "line": 2,
            },
            "start": {
              "character": 8,
              "line": 2,
            },
          },
          "typeAst": {
            "ident": "a",
            "range": {
              "end": {
                "character": 15,
                "line": 2,
              },
              "start": {
                "character": 14,
                "line": 2,
              },
            },
            "type": "var",
          },
        },
        {
          "name": "age",
          "range": {
            "end": {
              "character": 14,
              "line": 3,
            },
            "start": {
              "character": 8,
              "line": 3,
            },
          },
          "typeAst": {
            "ident": "b",
            "range": {
              "end": {
                "character": 14,
                "line": 3,
              },
              "start": {
                "character": 13,
                "line": 3,
              },
            },
            "type": "var",
          },
        },
      ],
      "name": "Person",
      "params": [],
      "pub": false,
      "range": {
        "end": {
          "character": 7,
          "line": 4,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "type": "struct",
    },
  ],
}
`;

exports[`structs > pub modifier 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "fields": [],
      "name": "Person",
      "params": [],
      "pub": true,
      "range": {
        "end": {
          "character": 26,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "struct",
    },
  ],
}
`;

exports[`structs > pub(..) modifier 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "fields": [],
      "name": "Person",
      "params": [],
      "pub": "..",
      "range": {
        "end": {
          "character": 30,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "struct",
    },
  ],
}
`;

exports[`structs > qualified field access 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 5,
            "line": 0,
          },
          "start": {
            "character": 4,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 27,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "field": {
          "name": "my_field",
          "range": {
            "end": {
              "character": 27,
              "line": 0,
            },
            "start": {
              "character": 19,
              "line": 0,
            },
          },
          "structName": "MyStruct",
        },
        "range": {
          "end": {
            "character": 27,
            "line": 0,
          },
          "start": {
            "character": 8,
            "line": 0,
          },
        },
        "struct": {
          "name": "s",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 9,
              "line": 0,
            },
            "start": {
              "character": 8,
              "line": 0,
            },
          },
          "type": "identifier",
        },
        "type": "field-access",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`structs > type params 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "fields": [],
      "name": "Person",
      "params": [
        {
          "name": "a",
          "range": {
            "end": {
              "character": 13,
              "line": 0,
            },
            "start": {
              "character": 12,
              "line": 0,
            },
          },
        },
        {
          "name": "b",
          "range": {
            "end": {
              "character": 16,
              "line": 0,
            },
            "start": {
              "character": 15,
              "line": 0,
            },
          },
        },
      ],
      "pub": false,
      "range": {
        "end": {
          "character": 28,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "struct",
    },
  ],
}
`;

exports[`structs > update a struct 1`] = `
{
  "declarations": [
    {
      "attributes": [],
      "binding": {
        "name": "_",
        "range": {
          "end": {
            "character": 11,
            "line": 1,
          },
          "start": {
            "character": 10,
            "line": 1,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 7,
          "line": 5,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": {
        "fields": [
          {
            "field": {
              "name": "a",
              "range": {
                "end": {
                  "character": 9,
                  "line": 2,
                },
                "start": {
                  "character": 8,
                  "line": 2,
                },
              },
            },
            "range": {
              "end": {
                "character": 13,
                "line": 2,
              },
              "start": {
                "character": 8,
                "line": 2,
              },
            },
            "value": {
              "range": {
                "end": {
                  "character": 13,
                  "line": 2,
                },
                "start": {
                  "character": 11,
                  "line": 2,
                },
              },
              "type": "constant",
              "value": {
                "type": "int",
                "value": 42,
              },
            },
          },
          {
            "field": {
              "name": "b",
              "range": {
                "end": {
                  "character": 9,
                  "line": 3,
                },
                "start": {
                  "character": 8,
                  "line": 3,
                },
              },
            },
            "range": {
              "end": {
                "character": 15,
                "line": 3,
              },
              "start": {
                "character": 8,
                "line": 3,
              },
            },
            "value": {
              "range": {
                "end": {
                  "character": 15,
                  "line": 3,
                },
                "start": {
                  "character": 11,
                  "line": 3,
                },
              },
              "type": "constant",
              "value": {
                "type": "string",
                "value": "ok",
              },
            },
          },
        ],
        "range": {
          "end": {
            "character": 7,
            "line": 5,
          },
          "start": {
            "character": 14,
            "line": 1,
          },
        },
        "spread": {
          "name": "expr",
          "namespace": undefined,
          "range": {
            "end": {
              "character": 14,
              "line": 4,
            },
            "start": {
              "character": 10,
              "line": 4,
            },
          },
          "type": "identifier",
        },
        "struct": {
          "name": "MyStruct",
          "range": {
            "end": {
              "character": 22,
              "line": 1,
            },
            "start": {
              "character": 14,
              "line": 1,
            },
          },
        },
        "type": "struct-literal",
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`traits > parses many traits in a polytype for the same tvar 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "range": {
            "end": {
              "character": 13,
              "line": 1,
            },
            "start": {
              "character": 6,
              "line": 1,
            },
          },
          "type": "@extern",
        },
        {
          "polytype": {
            "mono": {
              "ident": "a",
              "range": {
                "end": {
                  "character": 13,
                  "line": 2,
                },
                "start": {
                  "character": 12,
                  "line": 2,
                },
              },
              "type": "var",
            },
            "range": {
              "end": {
                "character": 31,
                "line": 2,
              },
              "start": {
                "character": 12,
                "line": 2,
              },
            },
            "where": [
              {
                "traits": [
                  "Ord",
                  "Eq",
                ],
                "typeVar": "a",
              },
            ],
          },
          "range": {
            "end": {
              "character": 31,
              "line": 2,
            },
            "start": {
              "character": 6,
              "line": 2,
            },
          },
          "type": "@type",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 11,
            "line": 3,
          },
          "start": {
            "character": 10,
            "line": 3,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 11,
          "line": 3,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": undefined,
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`traits > parses traits for many vars 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "range": {
            "end": {
              "character": 13,
              "line": 1,
            },
            "start": {
              "character": 6,
              "line": 1,
            },
          },
          "type": "@extern",
        },
        {
          "polytype": {
            "mono": {
              "args": [
                {
                  "ident": "a",
                  "range": {
                    "end": {
                      "character": 14,
                      "line": 2,
                    },
                    "start": {
                      "character": 13,
                      "line": 2,
                    },
                  },
                  "type": "var",
                },
                {
                  "ident": "b",
                  "range": {
                    "end": {
                      "character": 17,
                      "line": 2,
                    },
                    "start": {
                      "character": 16,
                      "line": 2,
                    },
                  },
                  "type": "var",
                },
              ],
              "name": "Tuple2",
              "namespace": "Tuple",
              "range": {
                "end": {
                  "character": 18,
                  "line": 2,
                },
                "start": {
                  "character": 12,
                  "line": 2,
                },
              },
              "type": "named",
            },
            "range": {
              "end": {
                "character": 40,
                "line": 2,
              },
              "start": {
                "character": 12,
                "line": 2,
              },
            },
            "where": [
              {
                "traits": [
                  "Ord",
                ],
                "typeVar": "a",
              },
              {
                "traits": [
                  "Show",
                ],
                "typeVar": "b",
              },
            ],
          },
          "range": {
            "end": {
              "character": 40,
              "line": 2,
            },
            "start": {
              "character": 6,
              "line": 2,
            },
          },
          "type": "@type",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 11,
            "line": 3,
          },
          "start": {
            "character": 10,
            "line": 3,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 11,
          "line": 3,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": undefined,
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`traits > parses traits in a polytype 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "range": {
            "end": {
              "character": 13,
              "line": 1,
            },
            "start": {
              "character": 6,
              "line": 1,
            },
          },
          "type": "@extern",
        },
        {
          "polytype": {
            "mono": {
              "ident": "a",
              "range": {
                "end": {
                  "character": 13,
                  "line": 2,
                },
                "start": {
                  "character": 12,
                  "line": 2,
                },
              },
              "type": "var",
            },
            "range": {
              "end": {
                "character": 26,
                "line": 2,
              },
              "start": {
                "character": 12,
                "line": 2,
              },
            },
            "where": [
              {
                "traits": [
                  "Ord",
                ],
                "typeVar": "a",
              },
            ],
          },
          "range": {
            "end": {
              "character": 26,
              "line": 2,
            },
            "start": {
              "character": 6,
              "line": 2,
            },
          },
          "type": "@type",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 11,
            "line": 3,
          },
          "start": {
            "character": 10,
            "line": 3,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 11,
          "line": 3,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": undefined,
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`type declarations > many type params 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "name": "T",
      "params": [
        {
          "name": "a",
          "range": {
            "end": {
              "character": 8,
              "line": 0,
            },
            "start": {
              "character": 7,
              "line": 0,
            },
          },
        },
        {
          "name": "b",
          "range": {
            "end": {
              "character": 11,
              "line": 0,
            },
            "start": {
              "character": 10,
              "line": 0,
            },
          },
        },
        {
          "name": "c",
          "range": {
            "end": {
              "character": 14,
              "line": 0,
            },
            "start": {
              "character": 13,
              "line": 0,
            },
          },
        },
      ],
      "pub": false,
      "range": {
        "end": {
          "character": 19,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "adt",
      "variants": [],
    },
  ],
}
`;

exports[`type declarations > single type param 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "name": "T",
      "params": [
        {
          "name": "a",
          "range": {
            "end": {
              "character": 8,
              "line": 0,
            },
            "start": {
              "character": 7,
              "line": 0,
            },
          },
        },
      ],
      "pub": false,
      "range": {
        "end": {
          "character": 13,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "adt",
      "variants": [],
    },
  ],
}
`;

exports[`type declarations > trailing comma after variants 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "name": "T",
      "params": [],
      "pub": false,
      "range": {
        "end": {
          "character": 16,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "adt",
      "variants": [
        {
          "args": [],
          "name": "A",
          "range": {
            "end": {
              "character": 10,
              "line": 0,
            },
            "start": {
              "character": 9,
              "line": 0,
            },
          },
        },
        {
          "args": [],
          "name": "B",
          "range": {
            "end": {
              "character": 13,
              "line": 0,
            },
            "start": {
              "character": 12,
              "line": 0,
            },
          },
        },
      ],
    },
  ],
}
`;

exports[`type declarations > type with a variant with complex args 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "name": "T",
      "params": [],
      "pub": false,
      "range": {
        "end": {
          "character": 7,
          "line": 3,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "type": "adt",
      "variants": [
        {
          "args": [
            {
              "args": [
                {
                  "ident": "a",
                  "range": {
                    "end": {
                      "character": 19,
                      "line": 2,
                    },
                    "start": {
                      "character": 18,
                      "line": 2,
                    },
                  },
                  "type": "var",
                },
                {
                  "args": [
                    {
                      "args": [],
                      "name": "Int",
                      "range": {
                        "end": {
                          "character": 31,
                          "line": 2,
                        },
                        "start": {
                          "character": 28,
                          "line": 2,
                        },
                      },
                      "type": "named",
                    },
                  ],
                  "name": "Nested",
                  "range": {
                    "end": {
                      "character": 32,
                      "line": 2,
                    },
                    "start": {
                      "character": 21,
                      "line": 2,
                    },
                  },
                  "type": "named",
                },
              ],
              "name": "Example",
              "range": {
                "end": {
                  "character": 33,
                  "line": 2,
                },
                "start": {
                  "character": 10,
                  "line": 2,
                },
              },
              "type": "named",
            },
          ],
          "name": "C",
          "range": {
            "end": {
              "character": 34,
              "line": 2,
            },
            "start": {
              "character": 8,
              "line": 2,
            },
          },
        },
      ],
    },
  ],
}
`;

exports[`type declarations > type with a variant with many args 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "name": "T",
      "params": [],
      "pub": false,
      "range": {
        "end": {
          "character": 18,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "adt",
      "variants": [
        {
          "args": [
            {
              "args": [],
              "name": "A",
              "range": {
                "end": {
                  "character": 12,
                  "line": 0,
                },
                "start": {
                  "character": 11,
                  "line": 0,
                },
              },
              "type": "named",
            },
            {
              "args": [],
              "name": "B",
              "range": {
                "end": {
                  "character": 15,
                  "line": 0,
                },
                "start": {
                  "character": 14,
                  "line": 0,
                },
              },
              "type": "named",
            },
          ],
          "name": "C",
          "range": {
            "end": {
              "character": 16,
              "line": 0,
            },
            "start": {
              "character": 9,
              "line": 0,
            },
          },
        },
      ],
    },
  ],
}
`;

exports[`type declarations > type with a variant with no args 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "name": "T",
      "params": [],
      "pub": false,
      "range": {
        "end": {
          "character": 12,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "adt",
      "variants": [
        {
          "args": [],
          "name": "C",
          "range": {
            "end": {
              "character": 10,
              "line": 0,
            },
            "start": {
              "character": 9,
              "line": 0,
            },
          },
        },
      ],
    },
  ],
}
`;

exports[`type declarations > type with a variant with one arg 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "name": "T",
      "params": [],
      "pub": false,
      "range": {
        "end": {
          "character": 17,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "adt",
      "variants": [
        {
          "args": [
            {
              "args": [],
              "name": "Arg",
              "range": {
                "end": {
                  "character": 14,
                  "line": 0,
                },
                "start": {
                  "character": 11,
                  "line": 0,
                },
              },
              "type": "named",
            },
          ],
          "name": "C",
          "range": {
            "end": {
              "character": 15,
              "line": 0,
            },
            "start": {
              "character": 9,
              "line": 0,
            },
          },
        },
      ],
    },
  ],
}
`;

exports[`type declarations > type with many variants 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "name": "T",
      "params": [],
      "pub": false,
      "range": {
        "end": {
          "character": 15,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "adt",
      "variants": [
        {
          "args": [],
          "name": "A",
          "range": {
            "end": {
              "character": 10,
              "line": 0,
            },
            "start": {
              "character": 9,
              "line": 0,
            },
          },
        },
        {
          "args": [],
          "name": "B",
          "range": {
            "end": {
              "character": 13,
              "line": 0,
            },
            "start": {
              "character": 12,
              "line": 0,
            },
          },
        },
      ],
    },
  ],
}
`;

exports[`type declarations > type with no variants 1`] = `
{
  "declarations": [],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [
    {
      "name": "Never",
      "params": [],
      "pub": false,
      "range": {
        "end": {
          "character": 14,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "type": "adt",
      "variants": [],
    },
  ],
}
`;

exports[`type hints > parses Fn type with args 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "polytype": {
            "mono": {
              "args": [
                {
                  "args": [],
                  "name": "X",
                  "range": {
                    "end": {
                      "character": 14,
                      "line": 1,
                    },
                    "start": {
                      "character": 13,
                      "line": 1,
                    },
                  },
                  "type": "named",
                },
                {
                  "args": [],
                  "name": "Y",
                  "range": {
                    "end": {
                      "character": 17,
                      "line": 1,
                    },
                    "start": {
                      "character": 16,
                      "line": 1,
                    },
                  },
                  "type": "named",
                },
              ],
              "range": {
                "end": {
                  "character": 23,
                  "line": 1,
                },
                "start": {
                  "character": 12,
                  "line": 1,
                },
              },
              "return": {
                "args": [],
                "name": "Z",
                "range": {
                  "end": {
                    "character": 23,
                    "line": 1,
                  },
                  "start": {
                    "character": 22,
                    "line": 1,
                  },
                },
                "type": "named",
              },
              "type": "fn",
            },
            "range": {
              "end": {
                "character": 23,
                "line": 1,
              },
              "start": {
                "character": 12,
                "line": 1,
              },
            },
            "where": [],
          },
          "range": {
            "end": {
              "character": 23,
              "line": 1,
            },
            "start": {
              "character": 6,
              "line": 1,
            },
          },
          "type": "@type",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 11,
            "line": 2,
          },
          "start": {
            "character": 10,
            "line": 2,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 15,
          "line": 2,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 15,
            "line": 2,
          },
          "start": {
            "character": 14,
            "line": 2,
          },
        },
        "type": "constant",
        "value": {
          "type": "int",
          "value": 0,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`type hints > parses Fn type with no args 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "polytype": {
            "mono": {
              "args": [],
              "range": {
                "end": {
                  "character": 21,
                  "line": 1,
                },
                "start": {
                  "character": 12,
                  "line": 1,
                },
              },
              "return": {
                "args": [],
                "name": "Int",
                "range": {
                  "end": {
                    "character": 21,
                    "line": 1,
                  },
                  "start": {
                    "character": 18,
                    "line": 1,
                  },
                },
                "type": "named",
              },
              "type": "fn",
            },
            "range": {
              "end": {
                "character": 21,
                "line": 1,
              },
              "start": {
                "character": 12,
                "line": 1,
              },
            },
            "where": [],
          },
          "range": {
            "end": {
              "character": 21,
              "line": 1,
            },
            "start": {
              "character": 6,
              "line": 1,
            },
          },
          "type": "@type",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 11,
            "line": 2,
          },
          "start": {
            "character": 10,
            "line": 2,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 16,
          "line": 2,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 16,
            "line": 2,
          },
          "start": {
            "character": 15,
            "line": 2,
          },
        },
        "type": "constant",
        "value": {
          "type": "int",
          "value": 0,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`type hints > parses a concrete type with no args as a type hint (extern) 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "range": {
            "end": {
              "character": 13,
              "line": 1,
            },
            "start": {
              "character": 6,
              "line": 1,
            },
          },
          "type": "@extern",
        },
        {
          "polytype": {
            "mono": {
              "args": [],
              "name": "Int",
              "range": {
                "end": {
                  "character": 15,
                  "line": 2,
                },
                "start": {
                  "character": 12,
                  "line": 2,
                },
              },
              "type": "named",
            },
            "range": {
              "end": {
                "character": 15,
                "line": 2,
              },
              "start": {
                "character": 12,
                "line": 2,
              },
            },
            "where": [],
          },
          "range": {
            "end": {
              "character": 15,
              "line": 2,
            },
            "start": {
              "character": 6,
              "line": 2,
            },
          },
          "type": "@type",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 11,
            "line": 3,
          },
          "start": {
            "character": 10,
            "line": 3,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 11,
          "line": 3,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": undefined,
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`type hints > parses a concrete type with no args as a type hint 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "polytype": {
            "mono": {
              "args": [],
              "name": "Int",
              "range": {
                "end": {
                  "character": 15,
                  "line": 1,
                },
                "start": {
                  "character": 12,
                  "line": 1,
                },
              },
              "type": "named",
            },
            "range": {
              "end": {
                "character": 15,
                "line": 1,
              },
              "start": {
                "character": 12,
                "line": 1,
              },
            },
            "where": [],
          },
          "range": {
            "end": {
              "character": 15,
              "line": 1,
            },
            "start": {
              "character": 6,
              "line": 1,
            },
          },
          "type": "@type",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 11,
            "line": 2,
          },
          "start": {
            "character": 10,
            "line": 2,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 15,
          "line": 2,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 15,
            "line": 2,
          },
          "start": {
            "character": 14,
            "line": 2,
          },
        },
        "type": "constant",
        "value": {
          "type": "int",
          "value": 0,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`type hints > parses concrete type with 1 arg 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "polytype": {
            "mono": {
              "args": [
                {
                  "args": [],
                  "name": "Int",
                  "range": {
                    "end": {
                      "character": 20,
                      "line": 1,
                    },
                    "start": {
                      "character": 17,
                      "line": 1,
                    },
                  },
                  "type": "named",
                },
              ],
              "name": "Option",
              "range": {
                "end": {
                  "character": 21,
                  "line": 1,
                },
                "start": {
                  "character": 10,
                  "line": 1,
                },
              },
              "type": "named",
            },
            "range": {
              "end": {
                "character": 21,
                "line": 1,
              },
              "start": {
                "character": 10,
                "line": 1,
              },
            },
            "where": [],
          },
          "range": {
            "end": {
              "character": 21,
              "line": 1,
            },
            "start": {
              "character": 4,
              "line": 1,
            },
          },
          "type": "@type",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 9,
            "line": 2,
          },
          "start": {
            "character": 8,
            "line": 2,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 13,
          "line": 2,
        },
        "start": {
          "character": 4,
          "line": 1,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 13,
            "line": 2,
          },
          "start": {
            "character": 12,
            "line": 2,
          },
        },
        "type": "constant",
        "value": {
          "type": "int",
          "value": 0,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`type hints > parses concrete type with 2 args 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "polytype": {
            "mono": {
              "args": [
                {
                  "args": [],
                  "name": "Int",
                  "range": {
                    "end": {
                      "character": 22,
                      "line": 1,
                    },
                    "start": {
                      "character": 19,
                      "line": 1,
                    },
                  },
                  "type": "named",
                },
                {
                  "args": [],
                  "name": "Bool",
                  "range": {
                    "end": {
                      "character": 28,
                      "line": 1,
                    },
                    "start": {
                      "character": 24,
                      "line": 1,
                    },
                  },
                  "type": "named",
                },
              ],
              "name": "Result",
              "range": {
                "end": {
                  "character": 29,
                  "line": 1,
                },
                "start": {
                  "character": 12,
                  "line": 1,
                },
              },
              "type": "named",
            },
            "range": {
              "end": {
                "character": 29,
                "line": 1,
              },
              "start": {
                "character": 12,
                "line": 1,
              },
            },
            "where": [],
          },
          "range": {
            "end": {
              "character": 29,
              "line": 1,
            },
            "start": {
              "character": 6,
              "line": 1,
            },
          },
          "type": "@type",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 11,
            "line": 2,
          },
          "start": {
            "character": 10,
            "line": 2,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 16,
          "line": 2,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 16,
            "line": 2,
          },
          "start": {
            "character": 15,
            "line": 2,
          },
        },
        "type": "constant",
        "value": {
          "type": "int",
          "value": 0,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`type hints > parses tuple type syntax sugar 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "polytype": {
            "mono": {
              "args": [
                {
                  "args": [],
                  "name": "Int",
                  "range": {
                    "end": {
                      "character": 15,
                      "line": 1,
                    },
                    "start": {
                      "character": 12,
                      "line": 1,
                    },
                  },
                  "type": "named",
                },
                {
                  "args": [
                    {
                      "args": [],
                      "name": "Int",
                      "range": {
                        "end": {
                          "character": 26,
                          "line": 1,
                        },
                        "start": {
                          "character": 23,
                          "line": 1,
                        },
                      },
                      "type": "named",
                    },
                  ],
                  "name": "Maybe",
                  "range": {
                    "end": {
                      "character": 27,
                      "line": 1,
                    },
                    "start": {
                      "character": 17,
                      "line": 1,
                    },
                  },
                  "type": "named",
                },
              ],
              "name": "Tuple2",
              "namespace": "Tuple",
              "range": {
                "end": {
                  "character": 28,
                  "line": 1,
                },
                "start": {
                  "character": 11,
                  "line": 1,
                },
              },
              "type": "named",
            },
            "range": {
              "end": {
                "character": 28,
                "line": 1,
              },
              "start": {
                "character": 11,
                "line": 1,
              },
            },
            "where": [],
          },
          "range": {
            "end": {
              "character": 28,
              "line": 1,
            },
            "start": {
              "character": 6,
              "line": 1,
            },
          },
          "type": "@type",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 11,
            "line": 2,
          },
          "start": {
            "character": 10,
            "line": 2,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 15,
          "line": 2,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 15,
            "line": 2,
          },
          "start": {
            "character": 14,
            "line": 2,
          },
        },
        "type": "constant",
        "value": {
          "type": "int",
          "value": 0,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`type hints > parses type vars hints 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "polytype": {
            "mono": {
              "ident": "a",
              "range": {
                "end": {
                  "character": 13,
                  "line": 1,
                },
                "start": {
                  "character": 12,
                  "line": 1,
                },
              },
              "type": "var",
            },
            "range": {
              "end": {
                "character": 13,
                "line": 1,
              },
              "start": {
                "character": 12,
                "line": 1,
              },
            },
            "where": [],
          },
          "range": {
            "end": {
              "character": 13,
              "line": 1,
            },
            "start": {
              "character": 6,
              "line": 1,
            },
          },
          "type": "@type",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 11,
            "line": 2,
          },
          "start": {
            "character": 10,
            "line": 2,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 15,
          "line": 2,
        },
        "start": {
          "character": 6,
          "line": 1,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 15,
            "line": 2,
          },
          "start": {
            "character": 14,
            "line": 2,
          },
        },
        "type": "constant",
        "value": {
          "type": "int",
          "value": 0,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;

exports[`type hints > parses underscore type 1`] = `
{
  "declarations": [
    {
      "attributes": [
        {
          "polytype": {
            "mono": {
              "range": {
                "end": {
                  "character": 7,
                  "line": 0,
                },
                "start": {
                  "character": 6,
                  "line": 0,
                },
              },
              "type": "any",
            },
            "range": {
              "end": {
                "character": 7,
                "line": 0,
              },
              "start": {
                "character": 6,
                "line": 0,
              },
            },
            "where": [],
          },
          "range": {
            "end": {
              "character": 7,
              "line": 0,
            },
            "start": {
              "character": 0,
              "line": 0,
            },
          },
          "type": "@type",
        },
      ],
      "binding": {
        "name": "x",
        "range": {
          "end": {
            "character": 13,
            "line": 0,
          },
          "start": {
            "character": 12,
            "line": 0,
          },
        },
      },
      "pub": false,
      "range": {
        "end": {
          "character": 17,
          "line": 0,
        },
        "start": {
          "character": 0,
          "line": 0,
        },
      },
      "value": {
        "range": {
          "end": {
            "character": 17,
            "line": 0,
          },
          "start": {
            "character": 16,
            "line": 0,
          },
        },
        "type": "constant",
        "value": {
          "type": "int",
          "value": 0,
        },
      },
    },
  ],
  "imports": [],
  "lineComments": [],
  "typeDeclarations": [],
}
`;
