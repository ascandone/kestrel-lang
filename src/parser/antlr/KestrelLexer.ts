// Generated from Kestrel.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class KestrelLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly T__35 = 36;
	public static readonly T__36 = 37;
	public static readonly T__37 = 38;
	public static readonly T__38 = 39;
	public static readonly T__39 = 40;
	public static readonly T__40 = 41;
	public static readonly T__41 = 42;
	public static readonly T__42 = 43;
	public static readonly T__43 = 44;
	public static readonly T__44 = 45;
	public static readonly T__45 = 46;
	public static readonly LineComment = 47;
	public static readonly EXPOSING_NESTED = 48;
	public static readonly INFIX_ID = 49;
	public static readonly ID = 50;
	public static readonly TYPE_ID = 51;
	public static readonly INT = 52;
	public static readonly CHAR = 53;
	public static readonly STRING = 54;
	public static readonly FLOAT = 55;
	public static readonly NEWLINE = 56;
	public static readonly WS = 57;
	public static readonly INFIX_CHAR = 58;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'/'", 
                                                            "'import'", 
                                                            "'.'", "'{'", 
                                                            "','", "'}'", 
                                                            "'pub'", "'let'", 
                                                            "':'", "'='", 
                                                            "'extern'", 
                                                            "'type'", "'<'", 
                                                            "'>'", "'Fn'", 
                                                            "'('", "')'", 
                                                            "'->'", "'!'", 
                                                            "'*'", "'*.'", 
                                                            "'/.'", "'%'", 
                                                            "'+'", "'-'", 
                                                            "'+.'", "'-.'", 
                                                            "'++'", "'::'", 
                                                            "'=='", "'!='", 
                                                            "'<='", "'>='", 
                                                            "'||'", "'&&'", 
                                                            "'fn'", "'if'", 
                                                            "'else'", "'match'", 
                                                            "'['", "']'", 
                                                            "'|>'", "'=>'", 
                                                            "'let#'", "';'", 
                                                            "'///'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, "LineComment", 
                                                             "EXPOSING_NESTED", 
                                                             "INFIX_ID", 
                                                             "ID", "TYPE_ID", 
                                                             "INT", "CHAR", 
                                                             "STRING", "FLOAT", 
                                                             "NEWLINE", 
                                                             "WS", "INFIX_CHAR" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "LineComment", "EXPOSING_NESTED", 
		"INFIX_ID", "ID", "TYPE_ID", "INT", "CHAR", "STRING", "FLOAT", "NEWLINE", 
		"WS", "INFIX_CHAR",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, KestrelLexer._ATN, KestrelLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "Kestrel.g4"; }

	public get literalNames(): (string | null)[] { return KestrelLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return KestrelLexer.symbolicNames; }
	public get ruleNames(): string[] { return KestrelLexer.ruleNames; }

	public get serializedATN(): number[] { return KestrelLexer._serializedATN; }

	public get channelNames(): string[] { return KestrelLexer.channelNames; }

	public get modeNames(): string[] { return KestrelLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,58,348,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,1,0,1,0,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,
	7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,
	1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,
	17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,23,
	1,23,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,
	28,1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,
	1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,
	37,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,40,1,40,1,41,1,41,1,41,1,42,
	1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,45,1,45,1,45,1,45,1,46,1,
	46,1,46,1,46,5,46,261,8,46,10,46,12,46,264,9,46,1,46,1,46,1,47,1,47,1,47,
	1,47,1,47,1,47,1,48,1,48,4,48,276,8,48,11,48,12,48,277,1,48,1,48,1,49,4,
	49,283,8,49,11,49,12,49,284,1,50,4,50,288,8,50,11,50,12,50,289,1,50,5,50,
	293,8,50,10,50,12,50,296,9,50,1,51,4,51,299,8,51,11,51,12,51,300,1,52,1,
	52,5,52,305,8,52,10,52,12,52,308,9,52,1,52,1,52,1,53,1,53,5,53,314,8,53,
	10,53,12,53,317,9,53,1,53,1,53,1,54,5,54,322,8,54,10,54,12,54,325,9,54,
	1,54,1,54,4,54,329,8,54,11,54,12,54,330,1,55,3,55,334,8,55,1,55,1,55,1,
	55,1,55,1,56,4,56,341,8,56,11,56,12,56,342,1,56,1,56,1,57,1,57,0,0,58,1,
	1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,
	15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,
	27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,
	39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,
	51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,1,0,9,2,0,10,10,13,
	13,2,0,95,95,97,122,1,0,65,90,3,0,48,57,65,90,97,122,1,0,48,57,1,0,39,39,
	1,0,34,34,3,0,9,10,13,13,32,32,8,0,33,33,37,38,42,43,45,47,58,58,60,62,
	94,94,124,124,359,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
	0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
	0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,
	0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,
	0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,
	0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,
	0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,
	0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,
	0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,
	0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,
	0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,1,117,1,0,0,
	0,3,119,1,0,0,0,5,126,1,0,0,0,7,128,1,0,0,0,9,130,1,0,0,0,11,132,1,0,0,
	0,13,134,1,0,0,0,15,138,1,0,0,0,17,142,1,0,0,0,19,144,1,0,0,0,21,146,1,
	0,0,0,23,153,1,0,0,0,25,158,1,0,0,0,27,160,1,0,0,0,29,162,1,0,0,0,31,165,
	1,0,0,0,33,167,1,0,0,0,35,169,1,0,0,0,37,172,1,0,0,0,39,174,1,0,0,0,41,
	176,1,0,0,0,43,179,1,0,0,0,45,182,1,0,0,0,47,184,1,0,0,0,49,186,1,0,0,0,
	51,188,1,0,0,0,53,191,1,0,0,0,55,194,1,0,0,0,57,197,1,0,0,0,59,200,1,0,
	0,0,61,203,1,0,0,0,63,206,1,0,0,0,65,209,1,0,0,0,67,212,1,0,0,0,69,215,
	1,0,0,0,71,218,1,0,0,0,73,221,1,0,0,0,75,224,1,0,0,0,77,229,1,0,0,0,79,
	235,1,0,0,0,81,237,1,0,0,0,83,239,1,0,0,0,85,242,1,0,0,0,87,245,1,0,0,0,
	89,250,1,0,0,0,91,252,1,0,0,0,93,256,1,0,0,0,95,267,1,0,0,0,97,273,1,0,
	0,0,99,282,1,0,0,0,101,287,1,0,0,0,103,298,1,0,0,0,105,302,1,0,0,0,107,
	311,1,0,0,0,109,323,1,0,0,0,111,333,1,0,0,0,113,340,1,0,0,0,115,346,1,0,
	0,0,117,118,5,47,0,0,118,2,1,0,0,0,119,120,5,105,0,0,120,121,5,109,0,0,
	121,122,5,112,0,0,122,123,5,111,0,0,123,124,5,114,0,0,124,125,5,116,0,0,
	125,4,1,0,0,0,126,127,5,46,0,0,127,6,1,0,0,0,128,129,5,123,0,0,129,8,1,
	0,0,0,130,131,5,44,0,0,131,10,1,0,0,0,132,133,5,125,0,0,133,12,1,0,0,0,
	134,135,5,112,0,0,135,136,5,117,0,0,136,137,5,98,0,0,137,14,1,0,0,0,138,
	139,5,108,0,0,139,140,5,101,0,0,140,141,5,116,0,0,141,16,1,0,0,0,142,143,
	5,58,0,0,143,18,1,0,0,0,144,145,5,61,0,0,145,20,1,0,0,0,146,147,5,101,0,
	0,147,148,5,120,0,0,148,149,5,116,0,0,149,150,5,101,0,0,150,151,5,114,0,
	0,151,152,5,110,0,0,152,22,1,0,0,0,153,154,5,116,0,0,154,155,5,121,0,0,
	155,156,5,112,0,0,156,157,5,101,0,0,157,24,1,0,0,0,158,159,5,60,0,0,159,
	26,1,0,0,0,160,161,5,62,0,0,161,28,1,0,0,0,162,163,5,70,0,0,163,164,5,110,
	0,0,164,30,1,0,0,0,165,166,5,40,0,0,166,32,1,0,0,0,167,168,5,41,0,0,168,
	34,1,0,0,0,169,170,5,45,0,0,170,171,5,62,0,0,171,36,1,0,0,0,172,173,5,33,
	0,0,173,38,1,0,0,0,174,175,5,42,0,0,175,40,1,0,0,0,176,177,5,42,0,0,177,
	178,5,46,0,0,178,42,1,0,0,0,179,180,5,47,0,0,180,181,5,46,0,0,181,44,1,
	0,0,0,182,183,5,37,0,0,183,46,1,0,0,0,184,185,5,43,0,0,185,48,1,0,0,0,186,
	187,5,45,0,0,187,50,1,0,0,0,188,189,5,43,0,0,189,190,5,46,0,0,190,52,1,
	0,0,0,191,192,5,45,0,0,192,193,5,46,0,0,193,54,1,0,0,0,194,195,5,43,0,0,
	195,196,5,43,0,0,196,56,1,0,0,0,197,198,5,58,0,0,198,199,5,58,0,0,199,58,
	1,0,0,0,200,201,5,61,0,0,201,202,5,61,0,0,202,60,1,0,0,0,203,204,5,33,0,
	0,204,205,5,61,0,0,205,62,1,0,0,0,206,207,5,60,0,0,207,208,5,61,0,0,208,
	64,1,0,0,0,209,210,5,62,0,0,210,211,5,61,0,0,211,66,1,0,0,0,212,213,5,124,
	0,0,213,214,5,124,0,0,214,68,1,0,0,0,215,216,5,38,0,0,216,217,5,38,0,0,
	217,70,1,0,0,0,218,219,5,102,0,0,219,220,5,110,0,0,220,72,1,0,0,0,221,222,
	5,105,0,0,222,223,5,102,0,0,223,74,1,0,0,0,224,225,5,101,0,0,225,226,5,
	108,0,0,226,227,5,115,0,0,227,228,5,101,0,0,228,76,1,0,0,0,229,230,5,109,
	0,0,230,231,5,97,0,0,231,232,5,116,0,0,232,233,5,99,0,0,233,234,5,104,0,
	0,234,78,1,0,0,0,235,236,5,91,0,0,236,80,1,0,0,0,237,238,5,93,0,0,238,82,
	1,0,0,0,239,240,5,124,0,0,240,241,5,62,0,0,241,84,1,0,0,0,242,243,5,61,
	0,0,243,244,5,62,0,0,244,86,1,0,0,0,245,246,5,108,0,0,246,247,5,101,0,0,
	247,248,5,116,0,0,248,249,5,35,0,0,249,88,1,0,0,0,250,251,5,59,0,0,251,
	90,1,0,0,0,252,253,5,47,0,0,253,254,5,47,0,0,254,255,5,47,0,0,255,92,1,
	0,0,0,256,257,5,47,0,0,257,258,5,47,0,0,258,262,1,0,0,0,259,261,8,0,0,0,
	260,259,1,0,0,0,261,264,1,0,0,0,262,260,1,0,0,0,262,263,1,0,0,0,263,265,
	1,0,0,0,264,262,1,0,0,0,265,266,6,46,0,0,266,94,1,0,0,0,267,268,5,40,0,
	0,268,269,5,46,0,0,269,270,5,46,0,0,270,271,1,0,0,0,271,272,5,41,0,0,272,
	96,1,0,0,0,273,275,5,40,0,0,274,276,3,115,57,0,275,274,1,0,0,0,276,277,
	1,0,0,0,277,275,1,0,0,0,277,278,1,0,0,0,278,279,1,0,0,0,279,280,5,41,0,
	0,280,98,1,0,0,0,281,283,7,1,0,0,282,281,1,0,0,0,283,284,1,0,0,0,284,282,
	1,0,0,0,284,285,1,0,0,0,285,100,1,0,0,0,286,288,7,2,0,0,287,286,1,0,0,0,
	288,289,1,0,0,0,289,287,1,0,0,0,289,290,1,0,0,0,290,294,1,0,0,0,291,293,
	7,3,0,0,292,291,1,0,0,0,293,296,1,0,0,0,294,292,1,0,0,0,294,295,1,0,0,0,
	295,102,1,0,0,0,296,294,1,0,0,0,297,299,7,4,0,0,298,297,1,0,0,0,299,300,
	1,0,0,0,300,298,1,0,0,0,300,301,1,0,0,0,301,104,1,0,0,0,302,306,5,39,0,
	0,303,305,8,5,0,0,304,303,1,0,0,0,305,308,1,0,0,0,306,304,1,0,0,0,306,307,
	1,0,0,0,307,309,1,0,0,0,308,306,1,0,0,0,309,310,5,39,0,0,310,106,1,0,0,
	0,311,315,5,34,0,0,312,314,8,6,0,0,313,312,1,0,0,0,314,317,1,0,0,0,315,
	313,1,0,0,0,315,316,1,0,0,0,316,318,1,0,0,0,317,315,1,0,0,0,318,319,5,34,
	0,0,319,108,1,0,0,0,320,322,7,4,0,0,321,320,1,0,0,0,322,325,1,0,0,0,323,
	321,1,0,0,0,323,324,1,0,0,0,324,326,1,0,0,0,325,323,1,0,0,0,326,328,5,46,
	0,0,327,329,7,4,0,0,328,327,1,0,0,0,329,330,1,0,0,0,330,328,1,0,0,0,330,
	331,1,0,0,0,331,110,1,0,0,0,332,334,5,13,0,0,333,332,1,0,0,0,333,334,1,
	0,0,0,334,335,1,0,0,0,335,336,5,10,0,0,336,337,1,0,0,0,337,338,6,55,1,0,
	338,112,1,0,0,0,339,341,7,7,0,0,340,339,1,0,0,0,341,342,1,0,0,0,342,340,
	1,0,0,0,342,343,1,0,0,0,343,344,1,0,0,0,344,345,6,56,1,0,345,114,1,0,0,
	0,346,347,7,8,0,0,347,116,1,0,0,0,13,0,262,277,284,289,294,300,306,315,
	323,330,333,342,2,0,1,0,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!KestrelLexer.__ATN) {
			KestrelLexer.__ATN = new ATNDeserializer().deserialize(KestrelLexer._serializedATN);
		}

		return KestrelLexer.__ATN;
	}


	static DecisionsToDFA = KestrelLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}