// Generated from Kestrel.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class KestrelLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly T__35 = 36;
	public static readonly T__36 = 37;
	public static readonly T__37 = 38;
	public static readonly T__38 = 39;
	public static readonly T__39 = 40;
	public static readonly T__40 = 41;
	public static readonly T__41 = 42;
	public static readonly T__42 = 43;
	public static readonly T__43 = 44;
	public static readonly T__44 = 45;
	public static readonly SLASH_4 = 46;
	public static readonly SLASH_3 = 47;
	public static readonly SLASH_2 = 48;
	public static readonly LineComment = 49;
	public static readonly EXPOSING_NESTED = 50;
	public static readonly INFIX_ID = 51;
	public static readonly ID = 52;
	public static readonly TYPE_ID = 53;
	public static readonly INT = 54;
	public static readonly CHAR = 55;
	public static readonly STRING = 56;
	public static readonly FLOAT = 57;
	public static readonly NEWLINE = 58;
	public static readonly WS = 59;
	public static readonly MODULEDOC_COMMENT_LINE = 60;
	public static readonly DOC_COMMENT_LINE = 61;
	public static readonly INFIX_CHAR = 62;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'/'", 
                                                            "'import'", 
                                                            "'.'", "'{'", 
                                                            "','", "'}'", 
                                                            "'pub'", "'let'", 
                                                            "':'", "'='", 
                                                            "'extern'", 
                                                            "'type'", "'<'", 
                                                            "'>'", "'Fn'", 
                                                            "'('", "')'", 
                                                            "'->'", "'!'", 
                                                            "'*'", "'*.'", 
                                                            "'/.'", "'%'", 
                                                            "'+'", "'-'", 
                                                            "'+.'", "'-.'", 
                                                            "'++'", "'::'", 
                                                            "'=='", "'!='", 
                                                            "'<='", "'>='", 
                                                            "'||'", "'&&'", 
                                                            "'fn'", "'if'", 
                                                            "'else'", "'match'", 
                                                            "'['", "']'", 
                                                            "'|>'", "'=>'", 
                                                            "'let#'", "';'", 
                                                            "'////'", "'///'", 
                                                            "'//'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             "SLASH_4", 
                                                             "SLASH_3", 
                                                             "SLASH_2", 
                                                             "LineComment", 
                                                             "EXPOSING_NESTED", 
                                                             "INFIX_ID", 
                                                             "ID", "TYPE_ID", 
                                                             "INT", "CHAR", 
                                                             "STRING", "FLOAT", 
                                                             "NEWLINE", 
                                                             "WS", "MODULEDOC_COMMENT_LINE", 
                                                             "DOC_COMMENT_LINE", 
                                                             "INFIX_CHAR" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "SLASH_4", "SLASH_3", "SLASH_2", "LineComment", 
		"EXPOSING_NESTED", "INFIX_ID", "ID", "TYPE_ID", "INT", "CHAR", "STRING", 
		"FLOAT", "NEWLINE", "WS", "MODULEDOC_COMMENT_LINE", "DOC_COMMENT_LINE", 
		"INFIX_CHAR",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, KestrelLexer._ATN, KestrelLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "Kestrel.g4"; }

	public get literalNames(): (string | null)[] { return KestrelLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return KestrelLexer.symbolicNames; }
	public get ruleNames(): string[] { return KestrelLexer.ruleNames; }

	public get serializedATN(): number[] { return KestrelLexer._serializedATN; }

	public get channelNames(): string[] { return KestrelLexer.channelNames; }

	public get modeNames(): string[] { return KestrelLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,62,380,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,
	4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,
	1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,
	14,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,19,1,19,1,20,
	1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,25,1,
	26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,
	1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,
	35,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,
	1,39,1,39,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,
	43,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,47,1,47,1,47,
	1,48,1,48,5,48,275,8,48,10,48,12,48,278,9,48,1,48,1,48,1,49,1,49,1,49,1,
	49,1,49,1,49,1,50,1,50,4,50,290,8,50,11,50,12,50,291,1,50,1,50,1,51,4,51,
	297,8,51,11,51,12,51,298,1,52,4,52,302,8,52,11,52,12,52,303,1,52,5,52,307,
	8,52,10,52,12,52,310,9,52,1,53,4,53,313,8,53,11,53,12,53,314,1,54,1,54,
	5,54,319,8,54,10,54,12,54,322,9,54,1,54,1,54,1,55,1,55,5,55,328,8,55,10,
	55,12,55,331,9,55,1,55,1,55,1,56,5,56,336,8,56,10,56,12,56,339,9,56,1,56,
	1,56,4,56,343,8,56,11,56,12,56,344,1,57,3,57,348,8,57,1,57,1,57,1,57,1,
	57,1,58,4,58,355,8,58,11,58,12,58,356,1,58,1,58,1,59,1,59,5,59,363,8,59,
	10,59,12,59,366,9,59,1,59,1,59,1,60,1,60,5,60,372,8,60,10,60,12,60,375,
	9,60,1,60,1,60,1,61,1,61,0,0,62,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
	19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
	43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,
	67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,
	91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,
	113,57,115,58,117,59,119,60,121,61,123,62,1,0,10,2,0,10,10,13,13,2,0,95,
	95,97,122,1,0,65,90,3,0,48,57,65,90,97,122,1,0,48,57,1,0,39,39,1,0,34,34,
	3,0,9,10,13,13,32,32,1,0,10,10,8,0,33,33,37,38,42,43,45,47,58,58,60,62,
	94,94,124,124,393,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
	0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
	0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,
	0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,
	0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,
	0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,
	0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,
	0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,
	0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,
	0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,
	0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,
	0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,1,125,1,0,0,0,3,127,1,0,0,0,
	5,134,1,0,0,0,7,136,1,0,0,0,9,138,1,0,0,0,11,140,1,0,0,0,13,142,1,0,0,0,
	15,146,1,0,0,0,17,150,1,0,0,0,19,152,1,0,0,0,21,154,1,0,0,0,23,161,1,0,
	0,0,25,166,1,0,0,0,27,168,1,0,0,0,29,170,1,0,0,0,31,173,1,0,0,0,33,175,
	1,0,0,0,35,177,1,0,0,0,37,180,1,0,0,0,39,182,1,0,0,0,41,184,1,0,0,0,43,
	187,1,0,0,0,45,190,1,0,0,0,47,192,1,0,0,0,49,194,1,0,0,0,51,196,1,0,0,0,
	53,199,1,0,0,0,55,202,1,0,0,0,57,205,1,0,0,0,59,208,1,0,0,0,61,211,1,0,
	0,0,63,214,1,0,0,0,65,217,1,0,0,0,67,220,1,0,0,0,69,223,1,0,0,0,71,226,
	1,0,0,0,73,229,1,0,0,0,75,232,1,0,0,0,77,237,1,0,0,0,79,243,1,0,0,0,81,
	245,1,0,0,0,83,247,1,0,0,0,85,250,1,0,0,0,87,253,1,0,0,0,89,258,1,0,0,0,
	91,260,1,0,0,0,93,265,1,0,0,0,95,269,1,0,0,0,97,272,1,0,0,0,99,281,1,0,
	0,0,101,287,1,0,0,0,103,296,1,0,0,0,105,301,1,0,0,0,107,312,1,0,0,0,109,
	316,1,0,0,0,111,325,1,0,0,0,113,337,1,0,0,0,115,347,1,0,0,0,117,354,1,0,
	0,0,119,360,1,0,0,0,121,369,1,0,0,0,123,378,1,0,0,0,125,126,5,47,0,0,126,
	2,1,0,0,0,127,128,5,105,0,0,128,129,5,109,0,0,129,130,5,112,0,0,130,131,
	5,111,0,0,131,132,5,114,0,0,132,133,5,116,0,0,133,4,1,0,0,0,134,135,5,46,
	0,0,135,6,1,0,0,0,136,137,5,123,0,0,137,8,1,0,0,0,138,139,5,44,0,0,139,
	10,1,0,0,0,140,141,5,125,0,0,141,12,1,0,0,0,142,143,5,112,0,0,143,144,5,
	117,0,0,144,145,5,98,0,0,145,14,1,0,0,0,146,147,5,108,0,0,147,148,5,101,
	0,0,148,149,5,116,0,0,149,16,1,0,0,0,150,151,5,58,0,0,151,18,1,0,0,0,152,
	153,5,61,0,0,153,20,1,0,0,0,154,155,5,101,0,0,155,156,5,120,0,0,156,157,
	5,116,0,0,157,158,5,101,0,0,158,159,5,114,0,0,159,160,5,110,0,0,160,22,
	1,0,0,0,161,162,5,116,0,0,162,163,5,121,0,0,163,164,5,112,0,0,164,165,5,
	101,0,0,165,24,1,0,0,0,166,167,5,60,0,0,167,26,1,0,0,0,168,169,5,62,0,0,
	169,28,1,0,0,0,170,171,5,70,0,0,171,172,5,110,0,0,172,30,1,0,0,0,173,174,
	5,40,0,0,174,32,1,0,0,0,175,176,5,41,0,0,176,34,1,0,0,0,177,178,5,45,0,
	0,178,179,5,62,0,0,179,36,1,0,0,0,180,181,5,33,0,0,181,38,1,0,0,0,182,183,
	5,42,0,0,183,40,1,0,0,0,184,185,5,42,0,0,185,186,5,46,0,0,186,42,1,0,0,
	0,187,188,5,47,0,0,188,189,5,46,0,0,189,44,1,0,0,0,190,191,5,37,0,0,191,
	46,1,0,0,0,192,193,5,43,0,0,193,48,1,0,0,0,194,195,5,45,0,0,195,50,1,0,
	0,0,196,197,5,43,0,0,197,198,5,46,0,0,198,52,1,0,0,0,199,200,5,45,0,0,200,
	201,5,46,0,0,201,54,1,0,0,0,202,203,5,43,0,0,203,204,5,43,0,0,204,56,1,
	0,0,0,205,206,5,58,0,0,206,207,5,58,0,0,207,58,1,0,0,0,208,209,5,61,0,0,
	209,210,5,61,0,0,210,60,1,0,0,0,211,212,5,33,0,0,212,213,5,61,0,0,213,62,
	1,0,0,0,214,215,5,60,0,0,215,216,5,61,0,0,216,64,1,0,0,0,217,218,5,62,0,
	0,218,219,5,61,0,0,219,66,1,0,0,0,220,221,5,124,0,0,221,222,5,124,0,0,222,
	68,1,0,0,0,223,224,5,38,0,0,224,225,5,38,0,0,225,70,1,0,0,0,226,227,5,102,
	0,0,227,228,5,110,0,0,228,72,1,0,0,0,229,230,5,105,0,0,230,231,5,102,0,
	0,231,74,1,0,0,0,232,233,5,101,0,0,233,234,5,108,0,0,234,235,5,115,0,0,
	235,236,5,101,0,0,236,76,1,0,0,0,237,238,5,109,0,0,238,239,5,97,0,0,239,
	240,5,116,0,0,240,241,5,99,0,0,241,242,5,104,0,0,242,78,1,0,0,0,243,244,
	5,91,0,0,244,80,1,0,0,0,245,246,5,93,0,0,246,82,1,0,0,0,247,248,5,124,0,
	0,248,249,5,62,0,0,249,84,1,0,0,0,250,251,5,61,0,0,251,252,5,62,0,0,252,
	86,1,0,0,0,253,254,5,108,0,0,254,255,5,101,0,0,255,256,5,116,0,0,256,257,
	5,35,0,0,257,88,1,0,0,0,258,259,5,59,0,0,259,90,1,0,0,0,260,261,5,47,0,
	0,261,262,5,47,0,0,262,263,5,47,0,0,263,264,5,47,0,0,264,92,1,0,0,0,265,
	266,5,47,0,0,266,267,5,47,0,0,267,268,5,47,0,0,268,94,1,0,0,0,269,270,5,
	47,0,0,270,271,5,47,0,0,271,96,1,0,0,0,272,276,3,95,47,0,273,275,8,0,0,
	0,274,273,1,0,0,0,275,278,1,0,0,0,276,274,1,0,0,0,276,277,1,0,0,0,277,279,
	1,0,0,0,278,276,1,0,0,0,279,280,6,48,0,0,280,98,1,0,0,0,281,282,5,40,0,
	0,282,283,5,46,0,0,283,284,5,46,0,0,284,285,1,0,0,0,285,286,5,41,0,0,286,
	100,1,0,0,0,287,289,5,40,0,0,288,290,3,123,61,0,289,288,1,0,0,0,290,291,
	1,0,0,0,291,289,1,0,0,0,291,292,1,0,0,0,292,293,1,0,0,0,293,294,5,41,0,
	0,294,102,1,0,0,0,295,297,7,1,0,0,296,295,1,0,0,0,297,298,1,0,0,0,298,296,
	1,0,0,0,298,299,1,0,0,0,299,104,1,0,0,0,300,302,7,2,0,0,301,300,1,0,0,0,
	302,303,1,0,0,0,303,301,1,0,0,0,303,304,1,0,0,0,304,308,1,0,0,0,305,307,
	7,3,0,0,306,305,1,0,0,0,307,310,1,0,0,0,308,306,1,0,0,0,308,309,1,0,0,0,
	309,106,1,0,0,0,310,308,1,0,0,0,311,313,7,4,0,0,312,311,1,0,0,0,313,314,
	1,0,0,0,314,312,1,0,0,0,314,315,1,0,0,0,315,108,1,0,0,0,316,320,5,39,0,
	0,317,319,8,5,0,0,318,317,1,0,0,0,319,322,1,0,0,0,320,318,1,0,0,0,320,321,
	1,0,0,0,321,323,1,0,0,0,322,320,1,0,0,0,323,324,5,39,0,0,324,110,1,0,0,
	0,325,329,5,34,0,0,326,328,8,6,0,0,327,326,1,0,0,0,328,331,1,0,0,0,329,
	327,1,0,0,0,329,330,1,0,0,0,330,332,1,0,0,0,331,329,1,0,0,0,332,333,5,34,
	0,0,333,112,1,0,0,0,334,336,7,4,0,0,335,334,1,0,0,0,336,339,1,0,0,0,337,
	335,1,0,0,0,337,338,1,0,0,0,338,340,1,0,0,0,339,337,1,0,0,0,340,342,5,46,
	0,0,341,343,7,4,0,0,342,341,1,0,0,0,343,344,1,0,0,0,344,342,1,0,0,0,344,
	345,1,0,0,0,345,114,1,0,0,0,346,348,5,13,0,0,347,346,1,0,0,0,347,348,1,
	0,0,0,348,349,1,0,0,0,349,350,5,10,0,0,350,351,1,0,0,0,351,352,6,57,1,0,
	352,116,1,0,0,0,353,355,7,7,0,0,354,353,1,0,0,0,355,356,1,0,0,0,356,354,
	1,0,0,0,356,357,1,0,0,0,357,358,1,0,0,0,358,359,6,58,1,0,359,118,1,0,0,
	0,360,364,3,91,45,0,361,363,8,8,0,0,362,361,1,0,0,0,363,366,1,0,0,0,364,
	362,1,0,0,0,364,365,1,0,0,0,365,367,1,0,0,0,366,364,1,0,0,0,367,368,3,115,
	57,0,368,120,1,0,0,0,369,373,3,93,46,0,370,372,8,8,0,0,371,370,1,0,0,0,
	372,375,1,0,0,0,373,371,1,0,0,0,373,374,1,0,0,0,374,376,1,0,0,0,375,373,
	1,0,0,0,376,377,3,115,57,0,377,122,1,0,0,0,378,379,7,9,0,0,379,124,1,0,
	0,0,15,0,276,291,298,303,308,314,320,329,337,344,347,356,364,373,2,0,1,
	0,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!KestrelLexer.__ATN) {
			KestrelLexer.__ATN = new ATNDeserializer().deserialize(KestrelLexer._serializedATN);
		}

		return KestrelLexer.__ATN;
	}


	static DecisionsToDFA = KestrelLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}